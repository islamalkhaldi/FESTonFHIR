//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for typeLegemiddel complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeLegemiddel"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Atc" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
 *         &lt;element name="NavnFormStyrke" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="Reseptgruppe" type="{http://www.kith.no/xmlstds}CS"/&gt;
 *         &lt;element name="LegemiddelformKort" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
 *         &lt;element name="RefVilkar" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="Preparattype" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element name="TypeSoknadSlv" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element name="Opioidsoknad" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Refusjon" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}PakningByttegruppe" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}AdministreringLegemiddel" minOccurs="0"/&gt;
 *         &lt;element name="SvartTrekant" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeLegemiddel", propOrder = {
    "atc",
    "navnFormStyrke",
    "reseptgruppe",
    "legemiddelformKort",
    "refVilkar",
    "preparattype",
    "typeSoknadSlv",
    "opioidsoknad",
    "refusjon",
    "pakningByttegruppe",
    "administreringLegemiddel",
    "svartTrekant"
})
@XmlSeeAlso({
    Legemiddeldose.class,
    LegemiddelVirkestoff.class,
    Legemiddelpakning.class,
    LegemiddelMerkevare.class
})
public class TypeLegemiddel
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Atc")
    protected CV atc;
    @XmlElement(name = "NavnFormStyrke", required = true)
    protected String navnFormStyrke;
    @XmlElement(name = "Reseptgruppe", required = true)
    protected CS reseptgruppe;
    @XmlElement(name = "LegemiddelformKort")
    protected CV legemiddelformKort;
    @XmlElementRef(name = "RefVilkar", namespace = "http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01", type = JAXBElement.class, required = false)
    protected List<JAXBElement<Object>> refVilkar;
    @XmlElement(name = "Preparattype")
    protected CS preparattype;
    @XmlElement(name = "TypeSoknadSlv")
    protected CS typeSoknadSlv;
    @XmlElement(name = "Opioidsoknad")
    protected Boolean opioidsoknad;
    @XmlElement(name = "Refusjon")
    protected List<Refusjon> refusjon;
    @XmlElement(name = "PakningByttegruppe")
    protected PakningByttegruppe pakningByttegruppe;
    @XmlElement(name = "AdministreringLegemiddel")
    protected AdministreringLegemiddel administreringLegemiddel;
    @XmlElement(name = "SvartTrekant")
    protected CV svartTrekant;

    /**
     * Gets the value of the atc property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getAtc() {
        return atc;
    }

    /**
     * Sets the value of the atc property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setAtc(CV value) {
        this.atc = value;
    }

    /**
     * Gets the value of the navnFormStyrke property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNavnFormStyrke() {
        return navnFormStyrke;
    }

    /**
     * Sets the value of the navnFormStyrke property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNavnFormStyrke(String value) {
        this.navnFormStyrke = value;
    }

    /**
     * Gets the value of the reseptgruppe property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getReseptgruppe() {
        return reseptgruppe;
    }

    /**
     * Sets the value of the reseptgruppe property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setReseptgruppe(CS value) {
        this.reseptgruppe = value;
    }

    /**
     * Gets the value of the legemiddelformKort property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getLegemiddelformKort() {
        return legemiddelformKort;
    }

    /**
     * Sets the value of the legemiddelformKort property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setLegemiddelformKort(CV value) {
        this.legemiddelformKort = value;
    }

    /**
     * Gets the value of the refVilkar property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the refVilkar property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRefVilkar().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<Object>> getRefVilkar() {
        if (refVilkar == null) {
            refVilkar = new ArrayList<JAXBElement<Object>>();
        }
        return this.refVilkar;
    }

    /**
     * Gets the value of the preparattype property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getPreparattype() {
        return preparattype;
    }

    /**
     * Sets the value of the preparattype property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setPreparattype(CS value) {
        this.preparattype = value;
    }

    /**
     * Gets the value of the typeSoknadSlv property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getTypeSoknadSlv() {
        return typeSoknadSlv;
    }

    /**
     * Sets the value of the typeSoknadSlv property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setTypeSoknadSlv(CS value) {
        this.typeSoknadSlv = value;
    }

    /**
     * Gets the value of the opioidsoknad property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getOpioidsoknad() {
        return opioidsoknad;
    }

    /**
     * Sets the value of the opioidsoknad property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOpioidsoknad(Boolean value) {
        this.opioidsoknad = value;
    }

    /**
     * Gets the value of the refusjon property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the refusjon property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRefusjon().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Refusjon }
     * 
     * 
     */
    public List<Refusjon> getRefusjon() {
        if (refusjon == null) {
            refusjon = new ArrayList<Refusjon>();
        }
        return this.refusjon;
    }

    /**
     * Gets the value of the pakningByttegruppe property.
     * 
     * @return
     *     possible object is
     *     {@link PakningByttegruppe }
     *     
     */
    public PakningByttegruppe getPakningByttegruppe() {
        return pakningByttegruppe;
    }

    /**
     * Sets the value of the pakningByttegruppe property.
     * 
     * @param value
     *     allowed object is
     *     {@link PakningByttegruppe }
     *     
     */
    public void setPakningByttegruppe(PakningByttegruppe value) {
        this.pakningByttegruppe = value;
    }

    /**
     * Gets the value of the administreringLegemiddel property.
     * 
     * @return
     *     possible object is
     *     {@link AdministreringLegemiddel }
     *     
     */
    public AdministreringLegemiddel getAdministreringLegemiddel() {
        return administreringLegemiddel;
    }

    /**
     * Sets the value of the administreringLegemiddel property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdministreringLegemiddel }
     *     
     */
    public void setAdministreringLegemiddel(AdministreringLegemiddel value) {
        this.administreringLegemiddel = value;
    }

    /**
     * Gets the value of the svartTrekant property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getSvartTrekant() {
        return svartTrekant;
    }

    /**
     * Sets the value of the svartTrekant property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setSvartTrekant(CV value) {
        this.svartTrekant = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            CV theAtc;
            theAtc = this.getAtc();
            strategy.appendField(locator, this, "atc", buffer, theAtc);
        }
        {
            String theNavnFormStyrke;
            theNavnFormStyrke = this.getNavnFormStyrke();
            strategy.appendField(locator, this, "navnFormStyrke", buffer, theNavnFormStyrke);
        }
        {
            CS theReseptgruppe;
            theReseptgruppe = this.getReseptgruppe();
            strategy.appendField(locator, this, "reseptgruppe", buffer, theReseptgruppe);
        }
        {
            CV theLegemiddelformKort;
            theLegemiddelformKort = this.getLegemiddelformKort();
            strategy.appendField(locator, this, "legemiddelformKort", buffer, theLegemiddelformKort);
        }
        {
            List<JAXBElement<Object>> theRefVilkar;
            theRefVilkar = (((this.refVilkar!= null)&&(!this.refVilkar.isEmpty()))?this.getRefVilkar():null);
            strategy.appendField(locator, this, "refVilkar", buffer, theRefVilkar);
        }
        {
            CS thePreparattype;
            thePreparattype = this.getPreparattype();
            strategy.appendField(locator, this, "preparattype", buffer, thePreparattype);
        }
        {
            CS theTypeSoknadSlv;
            theTypeSoknadSlv = this.getTypeSoknadSlv();
            strategy.appendField(locator, this, "typeSoknadSlv", buffer, theTypeSoknadSlv);
        }
        {
            Boolean theOpioidsoknad;
            theOpioidsoknad = this.getOpioidsoknad();
            strategy.appendField(locator, this, "opioidsoknad", buffer, theOpioidsoknad);
        }
        {
            List<Refusjon> theRefusjon;
            theRefusjon = (((this.refusjon!= null)&&(!this.refusjon.isEmpty()))?this.getRefusjon():null);
            strategy.appendField(locator, this, "refusjon", buffer, theRefusjon);
        }
        {
            PakningByttegruppe thePakningByttegruppe;
            thePakningByttegruppe = this.getPakningByttegruppe();
            strategy.appendField(locator, this, "pakningByttegruppe", buffer, thePakningByttegruppe);
        }
        {
            AdministreringLegemiddel theAdministreringLegemiddel;
            theAdministreringLegemiddel = this.getAdministreringLegemiddel();
            strategy.appendField(locator, this, "administreringLegemiddel", buffer, theAdministreringLegemiddel);
        }
        {
            CV theSvartTrekant;
            theSvartTrekant = this.getSvartTrekant();
            strategy.appendField(locator, this, "svartTrekant", buffer, theSvartTrekant);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TypeLegemiddel)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TypeLegemiddel that = ((TypeLegemiddel) object);
        {
            CV lhsAtc;
            lhsAtc = this.getAtc();
            CV rhsAtc;
            rhsAtc = that.getAtc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "atc", lhsAtc), LocatorUtils.property(thatLocator, "atc", rhsAtc), lhsAtc, rhsAtc)) {
                return false;
            }
        }
        {
            String lhsNavnFormStyrke;
            lhsNavnFormStyrke = this.getNavnFormStyrke();
            String rhsNavnFormStyrke;
            rhsNavnFormStyrke = that.getNavnFormStyrke();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "navnFormStyrke", lhsNavnFormStyrke), LocatorUtils.property(thatLocator, "navnFormStyrke", rhsNavnFormStyrke), lhsNavnFormStyrke, rhsNavnFormStyrke)) {
                return false;
            }
        }
        {
            CS lhsReseptgruppe;
            lhsReseptgruppe = this.getReseptgruppe();
            CS rhsReseptgruppe;
            rhsReseptgruppe = that.getReseptgruppe();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reseptgruppe", lhsReseptgruppe), LocatorUtils.property(thatLocator, "reseptgruppe", rhsReseptgruppe), lhsReseptgruppe, rhsReseptgruppe)) {
                return false;
            }
        }
        {
            CV lhsLegemiddelformKort;
            lhsLegemiddelformKort = this.getLegemiddelformKort();
            CV rhsLegemiddelformKort;
            rhsLegemiddelformKort = that.getLegemiddelformKort();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legemiddelformKort", lhsLegemiddelformKort), LocatorUtils.property(thatLocator, "legemiddelformKort", rhsLegemiddelformKort), lhsLegemiddelformKort, rhsLegemiddelformKort)) {
                return false;
            }
        }
        {
            List<JAXBElement<Object>> lhsRefVilkar;
            lhsRefVilkar = (((this.refVilkar!= null)&&(!this.refVilkar.isEmpty()))?this.getRefVilkar():null);
            List<JAXBElement<Object>> rhsRefVilkar;
            rhsRefVilkar = (((that.refVilkar!= null)&&(!that.refVilkar.isEmpty()))?that.getRefVilkar():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refVilkar", lhsRefVilkar), LocatorUtils.property(thatLocator, "refVilkar", rhsRefVilkar), lhsRefVilkar, rhsRefVilkar)) {
                return false;
            }
        }
        {
            CS lhsPreparattype;
            lhsPreparattype = this.getPreparattype();
            CS rhsPreparattype;
            rhsPreparattype = that.getPreparattype();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "preparattype", lhsPreparattype), LocatorUtils.property(thatLocator, "preparattype", rhsPreparattype), lhsPreparattype, rhsPreparattype)) {
                return false;
            }
        }
        {
            CS lhsTypeSoknadSlv;
            lhsTypeSoknadSlv = this.getTypeSoknadSlv();
            CS rhsTypeSoknadSlv;
            rhsTypeSoknadSlv = that.getTypeSoknadSlv();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "typeSoknadSlv", lhsTypeSoknadSlv), LocatorUtils.property(thatLocator, "typeSoknadSlv", rhsTypeSoknadSlv), lhsTypeSoknadSlv, rhsTypeSoknadSlv)) {
                return false;
            }
        }
        {
            Boolean lhsOpioidsoknad;
            lhsOpioidsoknad = this.getOpioidsoknad();
            Boolean rhsOpioidsoknad;
            rhsOpioidsoknad = that.getOpioidsoknad();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "opioidsoknad", lhsOpioidsoknad), LocatorUtils.property(thatLocator, "opioidsoknad", rhsOpioidsoknad), lhsOpioidsoknad, rhsOpioidsoknad)) {
                return false;
            }
        }
        {
            List<Refusjon> lhsRefusjon;
            lhsRefusjon = (((this.refusjon!= null)&&(!this.refusjon.isEmpty()))?this.getRefusjon():null);
            List<Refusjon> rhsRefusjon;
            rhsRefusjon = (((that.refusjon!= null)&&(!that.refusjon.isEmpty()))?that.getRefusjon():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refusjon", lhsRefusjon), LocatorUtils.property(thatLocator, "refusjon", rhsRefusjon), lhsRefusjon, rhsRefusjon)) {
                return false;
            }
        }
        {
            PakningByttegruppe lhsPakningByttegruppe;
            lhsPakningByttegruppe = this.getPakningByttegruppe();
            PakningByttegruppe rhsPakningByttegruppe;
            rhsPakningByttegruppe = that.getPakningByttegruppe();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pakningByttegruppe", lhsPakningByttegruppe), LocatorUtils.property(thatLocator, "pakningByttegruppe", rhsPakningByttegruppe), lhsPakningByttegruppe, rhsPakningByttegruppe)) {
                return false;
            }
        }
        {
            AdministreringLegemiddel lhsAdministreringLegemiddel;
            lhsAdministreringLegemiddel = this.getAdministreringLegemiddel();
            AdministreringLegemiddel rhsAdministreringLegemiddel;
            rhsAdministreringLegemiddel = that.getAdministreringLegemiddel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "administreringLegemiddel", lhsAdministreringLegemiddel), LocatorUtils.property(thatLocator, "administreringLegemiddel", rhsAdministreringLegemiddel), lhsAdministreringLegemiddel, rhsAdministreringLegemiddel)) {
                return false;
            }
        }
        {
            CV lhsSvartTrekant;
            lhsSvartTrekant = this.getSvartTrekant();
            CV rhsSvartTrekant;
            rhsSvartTrekant = that.getSvartTrekant();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "svartTrekant", lhsSvartTrekant), LocatorUtils.property(thatLocator, "svartTrekant", rhsSvartTrekant), lhsSvartTrekant, rhsSvartTrekant)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            CV theAtc;
            theAtc = this.getAtc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "atc", theAtc), currentHashCode, theAtc);
        }
        {
            String theNavnFormStyrke;
            theNavnFormStyrke = this.getNavnFormStyrke();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "navnFormStyrke", theNavnFormStyrke), currentHashCode, theNavnFormStyrke);
        }
        {
            CS theReseptgruppe;
            theReseptgruppe = this.getReseptgruppe();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reseptgruppe", theReseptgruppe), currentHashCode, theReseptgruppe);
        }
        {
            CV theLegemiddelformKort;
            theLegemiddelformKort = this.getLegemiddelformKort();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legemiddelformKort", theLegemiddelformKort), currentHashCode, theLegemiddelformKort);
        }
        {
            List<JAXBElement<Object>> theRefVilkar;
            theRefVilkar = (((this.refVilkar!= null)&&(!this.refVilkar.isEmpty()))?this.getRefVilkar():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refVilkar", theRefVilkar), currentHashCode, theRefVilkar);
        }
        {
            CS thePreparattype;
            thePreparattype = this.getPreparattype();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "preparattype", thePreparattype), currentHashCode, thePreparattype);
        }
        {
            CS theTypeSoknadSlv;
            theTypeSoknadSlv = this.getTypeSoknadSlv();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "typeSoknadSlv", theTypeSoknadSlv), currentHashCode, theTypeSoknadSlv);
        }
        {
            Boolean theOpioidsoknad;
            theOpioidsoknad = this.getOpioidsoknad();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "opioidsoknad", theOpioidsoknad), currentHashCode, theOpioidsoknad);
        }
        {
            List<Refusjon> theRefusjon;
            theRefusjon = (((this.refusjon!= null)&&(!this.refusjon.isEmpty()))?this.getRefusjon():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refusjon", theRefusjon), currentHashCode, theRefusjon);
        }
        {
            PakningByttegruppe thePakningByttegruppe;
            thePakningByttegruppe = this.getPakningByttegruppe();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pakningByttegruppe", thePakningByttegruppe), currentHashCode, thePakningByttegruppe);
        }
        {
            AdministreringLegemiddel theAdministreringLegemiddel;
            theAdministreringLegemiddel = this.getAdministreringLegemiddel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "administreringLegemiddel", theAdministreringLegemiddel), currentHashCode, theAdministreringLegemiddel);
        }
        {
            CV theSvartTrekant;
            theSvartTrekant = this.getSvartTrekant();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "svartTrekant", theSvartTrekant), currentHashCode, theSvartTrekant);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
