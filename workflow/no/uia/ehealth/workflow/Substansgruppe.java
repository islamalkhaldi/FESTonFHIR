//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Navn" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Substans" maxOccurs="unbounded"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="Substans" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *                   &lt;element name="Atc" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
 *                   &lt;element name="RefVirkestoff" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "navn",
    "substans"
})
@XmlRootElement(name = "Substansgruppe", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class Substansgruppe
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Navn", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected String navn;
    @XmlElement(name = "Substans", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected List<Substansgruppe.Substans> substans;

    /**
     * Gets the value of the navn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNavn() {
        return navn;
    }

    /**
     * Sets the value of the navn property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNavn(String value) {
        this.navn = value;
    }

    /**
     * Gets the value of the substans property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the substans property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubstans().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Substansgruppe.Substans }
     * 
     * 
     */
    public List<Substansgruppe.Substans> getSubstans() {
        if (substans == null) {
            substans = new ArrayList<Substansgruppe.Substans>();
        }
        return this.substans;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theNavn;
            theNavn = this.getNavn();
            strategy.appendField(locator, this, "navn", buffer, theNavn);
        }
        {
            List<Substansgruppe.Substans> theSubstans;
            theSubstans = (((this.substans!= null)&&(!this.substans.isEmpty()))?this.getSubstans():null);
            strategy.appendField(locator, this, "substans", buffer, theSubstans);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Substansgruppe)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Substansgruppe that = ((Substansgruppe) object);
        {
            String lhsNavn;
            lhsNavn = this.getNavn();
            String rhsNavn;
            rhsNavn = that.getNavn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "navn", lhsNavn), LocatorUtils.property(thatLocator, "navn", rhsNavn), lhsNavn, rhsNavn)) {
                return false;
            }
        }
        {
            List<Substansgruppe.Substans> lhsSubstans;
            lhsSubstans = (((this.substans!= null)&&(!this.substans.isEmpty()))?this.getSubstans():null);
            List<Substansgruppe.Substans> rhsSubstans;
            rhsSubstans = (((that.substans!= null)&&(!that.substans.isEmpty()))?that.getSubstans():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "substans", lhsSubstans), LocatorUtils.property(thatLocator, "substans", rhsSubstans), lhsSubstans, rhsSubstans)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theNavn;
            theNavn = this.getNavn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "navn", theNavn), currentHashCode, theNavn);
        }
        {
            List<Substansgruppe.Substans> theSubstans;
            theSubstans = (((this.substans!= null)&&(!this.substans.isEmpty()))?this.getSubstans():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "substans", theSubstans), currentHashCode, theSubstans);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="Substans" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
     *         &lt;element name="Atc" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
     *         &lt;element name="RefVirkestoff" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "substans",
        "atc",
        "refVirkestoff"
    })
    public static class Substans
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "Substans", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
        protected String substans;
        @XmlElement(name = "Atc", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
        protected CV atc;
        @XmlElementRef(name = "RefVirkestoff", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", type = JAXBElement.class, required = false)
        protected List<JAXBElement<Object>> refVirkestoff;

        /**
         * Gets the value of the substans property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getSubstans() {
            return substans;
        }

        /**
         * Sets the value of the substans property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSubstans(String value) {
            this.substans = value;
        }

        /**
         * Gets the value of the atc property.
         * 
         * @return
         *     possible object is
         *     {@link CV }
         *     
         */
        public CV getAtc() {
            return atc;
        }

        /**
         * Sets the value of the atc property.
         * 
         * @param value
         *     allowed object is
         *     {@link CV }
         *     
         */
        public void setAtc(CV value) {
            this.atc = value;
        }

        /**
         * Gets the value of the refVirkestoff property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the refVirkestoff property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getRefVirkestoff().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link JAXBElement }{@code <}{@link Object }{@code >}
         * 
         * 
         */
        public List<JAXBElement<Object>> getRefVirkestoff() {
            if (refVirkestoff == null) {
                refVirkestoff = new ArrayList<JAXBElement<Object>>();
            }
            return this.refVirkestoff;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theSubstans;
                theSubstans = this.getSubstans();
                strategy.appendField(locator, this, "substans", buffer, theSubstans);
            }
            {
                CV theAtc;
                theAtc = this.getAtc();
                strategy.appendField(locator, this, "atc", buffer, theAtc);
            }
            {
                List<JAXBElement<Object>> theRefVirkestoff;
                theRefVirkestoff = (((this.refVirkestoff!= null)&&(!this.refVirkestoff.isEmpty()))?this.getRefVirkestoff():null);
                strategy.appendField(locator, this, "refVirkestoff", buffer, theRefVirkestoff);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Substansgruppe.Substans)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Substansgruppe.Substans that = ((Substansgruppe.Substans) object);
            {
                String lhsSubstans;
                lhsSubstans = this.getSubstans();
                String rhsSubstans;
                rhsSubstans = that.getSubstans();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "substans", lhsSubstans), LocatorUtils.property(thatLocator, "substans", rhsSubstans), lhsSubstans, rhsSubstans)) {
                    return false;
                }
            }
            {
                CV lhsAtc;
                lhsAtc = this.getAtc();
                CV rhsAtc;
                rhsAtc = that.getAtc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "atc", lhsAtc), LocatorUtils.property(thatLocator, "atc", rhsAtc), lhsAtc, rhsAtc)) {
                    return false;
                }
            }
            {
                List<JAXBElement<Object>> lhsRefVirkestoff;
                lhsRefVirkestoff = (((this.refVirkestoff!= null)&&(!this.refVirkestoff.isEmpty()))?this.getRefVirkestoff():null);
                List<JAXBElement<Object>> rhsRefVirkestoff;
                rhsRefVirkestoff = (((that.refVirkestoff!= null)&&(!that.refVirkestoff.isEmpty()))?that.getRefVirkestoff():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "refVirkestoff", lhsRefVirkestoff), LocatorUtils.property(thatLocator, "refVirkestoff", rhsRefVirkestoff), lhsRefVirkestoff, rhsRefVirkestoff)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theSubstans;
                theSubstans = this.getSubstans();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "substans", theSubstans), currentHashCode, theSubstans);
            }
            {
                CV theAtc;
                theAtc = this.getAtc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "atc", theAtc), currentHashCode, theAtc);
            }
            {
                List<JAXBElement<Object>> theRefVirkestoff;
                theRefVirkestoff = (((this.refVirkestoff!= null)&&(!this.refVirkestoff.isEmpty()))?this.getRefVirkestoff():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refVirkestoff", theRefVirkestoff), currentHashCode, theRefVirkestoff);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
