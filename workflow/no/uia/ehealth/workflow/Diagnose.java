//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Id" type="{http://www.w3.org/2001/XMLSchema}ID"/&gt;
 *         &lt;element name="Diagnosekode" type="{http://www.kith.no/xmlstds}CV"/&gt;
 *         &lt;element name="Bruksomrade" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/m30/2014-12-01}Behandling" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "id",
    "diagnosekode",
    "bruksomrade",
    "behandling"
})
@XmlRootElement(name = "Diagnose", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class Diagnose
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Id", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlElement(name = "Diagnosekode", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected CV diagnosekode;
    @XmlElement(name = "Bruksomrade", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected String bruksomrade;
    @XmlElement(name = "Behandling", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected List<Behandling> behandling;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the diagnosekode property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getDiagnosekode() {
        return diagnosekode;
    }

    /**
     * Sets the value of the diagnosekode property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setDiagnosekode(CV value) {
        this.diagnosekode = value;
    }

    /**
     * Gets the value of the bruksomrade property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBruksomrade() {
        return bruksomrade;
    }

    /**
     * Sets the value of the bruksomrade property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBruksomrade(String value) {
        this.bruksomrade = value;
    }

    /**
     * Gets the value of the behandling property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the behandling property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBehandling().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Behandling }
     * 
     * 
     */
    public List<Behandling> getBehandling() {
        if (behandling == null) {
            behandling = new ArrayList<Behandling>();
        }
        return this.behandling;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            CV theDiagnosekode;
            theDiagnosekode = this.getDiagnosekode();
            strategy.appendField(locator, this, "diagnosekode", buffer, theDiagnosekode);
        }
        {
            String theBruksomrade;
            theBruksomrade = this.getBruksomrade();
            strategy.appendField(locator, this, "bruksomrade", buffer, theBruksomrade);
        }
        {
            List<Behandling> theBehandling;
            theBehandling = (((this.behandling!= null)&&(!this.behandling.isEmpty()))?this.getBehandling():null);
            strategy.appendField(locator, this, "behandling", buffer, theBehandling);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Diagnose)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Diagnose that = ((Diagnose) object);
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            CV lhsDiagnosekode;
            lhsDiagnosekode = this.getDiagnosekode();
            CV rhsDiagnosekode;
            rhsDiagnosekode = that.getDiagnosekode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "diagnosekode", lhsDiagnosekode), LocatorUtils.property(thatLocator, "diagnosekode", rhsDiagnosekode), lhsDiagnosekode, rhsDiagnosekode)) {
                return false;
            }
        }
        {
            String lhsBruksomrade;
            lhsBruksomrade = this.getBruksomrade();
            String rhsBruksomrade;
            rhsBruksomrade = that.getBruksomrade();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bruksomrade", lhsBruksomrade), LocatorUtils.property(thatLocator, "bruksomrade", rhsBruksomrade), lhsBruksomrade, rhsBruksomrade)) {
                return false;
            }
        }
        {
            List<Behandling> lhsBehandling;
            lhsBehandling = (((this.behandling!= null)&&(!this.behandling.isEmpty()))?this.getBehandling():null);
            List<Behandling> rhsBehandling;
            rhsBehandling = (((that.behandling!= null)&&(!that.behandling.isEmpty()))?that.getBehandling():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "behandling", lhsBehandling), LocatorUtils.property(thatLocator, "behandling", rhsBehandling), lhsBehandling, rhsBehandling)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            CV theDiagnosekode;
            theDiagnosekode = this.getDiagnosekode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "diagnosekode", theDiagnosekode), currentHashCode, theDiagnosekode);
        }
        {
            String theBruksomrade;
            theBruksomrade = this.getBruksomrade();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bruksomrade", theBruksomrade), currentHashCode, theBruksomrade);
        }
        {
            List<Behandling> theBehandling;
            theBehandling = (((this.behandling!= null)&&(!this.behandling.isEmpty()))?this.getBehandling():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "behandling", theBehandling), currentHashCode, theBehandling);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
