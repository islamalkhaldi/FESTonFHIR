//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="OppfOrdineringVirkestoff" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;extension base="{http://www.kith.no/xmlstds/eresept/m30/2014-12-01}typeEnkeltoppforingFest"&gt;
 *                 &lt;sequence minOccurs="0"&gt;
 *                   &lt;element name="OrdineringVirkestoff"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;sequence&gt;
 *                             &lt;element name="Id" type="{http://www.w3.org/2001/XMLSchema}ID"/&gt;
 *                             &lt;element name="NavnVirkestoffOrdinering" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *                             &lt;element name="LegemiddelformKort" type="{http://www.kith.no/xmlstds}CV"/&gt;
 *                             &lt;element name="Reseptgruppe" type="{http://www.kith.no/xmlstds}CS"/&gt;
 *                             &lt;element name="RefByttegruppe" type="{http://www.w3.org/2001/XMLSchema}IDREF" minOccurs="0"/&gt;
 *                             &lt;element name="EnhetOrdinering" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                             &lt;element name="Atc" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
 *                             &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}AdministreringLegemiddel" minOccurs="0"/&gt;
 *                             &lt;element name="SvartTrekant" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
 *                             &lt;element name="RefLegemiddelVirkestoff" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded"/&gt;
 *                             &lt;element name="RefLegemiddelDose" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded"/&gt;
 *                           &lt;/sequence&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/extension&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "oppfOrdineringVirkestoff"
})
@XmlRootElement(name = "KatOrdineringVirkestoff", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class KatOrdineringVirkestoff
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "OppfOrdineringVirkestoff", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected List<KatOrdineringVirkestoff.OppfOrdineringVirkestoff> oppfOrdineringVirkestoff;

    /**
     * Gets the value of the oppfOrdineringVirkestoff property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the oppfOrdineringVirkestoff property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOppfOrdineringVirkestoff().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link KatOrdineringVirkestoff.OppfOrdineringVirkestoff }
     * 
     * 
     */
    public List<KatOrdineringVirkestoff.OppfOrdineringVirkestoff> getOppfOrdineringVirkestoff() {
        if (oppfOrdineringVirkestoff == null) {
            oppfOrdineringVirkestoff = new ArrayList<KatOrdineringVirkestoff.OppfOrdineringVirkestoff>();
        }
        return this.oppfOrdineringVirkestoff;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<KatOrdineringVirkestoff.OppfOrdineringVirkestoff> theOppfOrdineringVirkestoff;
            theOppfOrdineringVirkestoff = (((this.oppfOrdineringVirkestoff!= null)&&(!this.oppfOrdineringVirkestoff.isEmpty()))?this.getOppfOrdineringVirkestoff():null);
            strategy.appendField(locator, this, "oppfOrdineringVirkestoff", buffer, theOppfOrdineringVirkestoff);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof KatOrdineringVirkestoff)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final KatOrdineringVirkestoff that = ((KatOrdineringVirkestoff) object);
        {
            List<KatOrdineringVirkestoff.OppfOrdineringVirkestoff> lhsOppfOrdineringVirkestoff;
            lhsOppfOrdineringVirkestoff = (((this.oppfOrdineringVirkestoff!= null)&&(!this.oppfOrdineringVirkestoff.isEmpty()))?this.getOppfOrdineringVirkestoff():null);
            List<KatOrdineringVirkestoff.OppfOrdineringVirkestoff> rhsOppfOrdineringVirkestoff;
            rhsOppfOrdineringVirkestoff = (((that.oppfOrdineringVirkestoff!= null)&&(!that.oppfOrdineringVirkestoff.isEmpty()))?that.getOppfOrdineringVirkestoff():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oppfOrdineringVirkestoff", lhsOppfOrdineringVirkestoff), LocatorUtils.property(thatLocator, "oppfOrdineringVirkestoff", rhsOppfOrdineringVirkestoff), lhsOppfOrdineringVirkestoff, rhsOppfOrdineringVirkestoff)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<KatOrdineringVirkestoff.OppfOrdineringVirkestoff> theOppfOrdineringVirkestoff;
            theOppfOrdineringVirkestoff = (((this.oppfOrdineringVirkestoff!= null)&&(!this.oppfOrdineringVirkestoff.isEmpty()))?this.getOppfOrdineringVirkestoff():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oppfOrdineringVirkestoff", theOppfOrdineringVirkestoff), currentHashCode, theOppfOrdineringVirkestoff);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;extension base="{http://www.kith.no/xmlstds/eresept/m30/2014-12-01}typeEnkeltoppforingFest"&gt;
     *       &lt;sequence minOccurs="0"&gt;
     *         &lt;element name="OrdineringVirkestoff"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element name="Id" type="{http://www.w3.org/2001/XMLSchema}ID"/&gt;
     *                   &lt;element name="NavnVirkestoffOrdinering" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
     *                   &lt;element name="LegemiddelformKort" type="{http://www.kith.no/xmlstds}CV"/&gt;
     *                   &lt;element name="Reseptgruppe" type="{http://www.kith.no/xmlstds}CS"/&gt;
     *                   &lt;element name="RefByttegruppe" type="{http://www.w3.org/2001/XMLSchema}IDREF" minOccurs="0"/&gt;
     *                   &lt;element name="EnhetOrdinering" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element name="Atc" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
     *                   &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}AdministreringLegemiddel" minOccurs="0"/&gt;
     *                   &lt;element name="SvartTrekant" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
     *                   &lt;element name="RefLegemiddelVirkestoff" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded"/&gt;
     *                   &lt;element name="RefLegemiddelDose" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/extension&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "ordineringVirkestoff"
    })
    public static class OppfOrdineringVirkestoff
        extends TypeEnkeltoppforingFest
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "OrdineringVirkestoff", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
        protected KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff ordineringVirkestoff;

        /**
         * Gets the value of the ordineringVirkestoff property.
         * 
         * @return
         *     possible object is
         *     {@link KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff }
         *     
         */
        public KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff getOrdineringVirkestoff() {
            return ordineringVirkestoff;
        }

        /**
         * Sets the value of the ordineringVirkestoff property.
         * 
         * @param value
         *     allowed object is
         *     {@link KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff }
         *     
         */
        public void setOrdineringVirkestoff(KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff value) {
            this.ordineringVirkestoff = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff theOrdineringVirkestoff;
                theOrdineringVirkestoff = this.getOrdineringVirkestoff();
                strategy.appendField(locator, this, "ordineringVirkestoff", buffer, theOrdineringVirkestoff);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof KatOrdineringVirkestoff.OppfOrdineringVirkestoff)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final KatOrdineringVirkestoff.OppfOrdineringVirkestoff that = ((KatOrdineringVirkestoff.OppfOrdineringVirkestoff) object);
            {
                KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff lhsOrdineringVirkestoff;
                lhsOrdineringVirkestoff = this.getOrdineringVirkestoff();
                KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff rhsOrdineringVirkestoff;
                rhsOrdineringVirkestoff = that.getOrdineringVirkestoff();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "ordineringVirkestoff", lhsOrdineringVirkestoff), LocatorUtils.property(thatLocator, "ordineringVirkestoff", rhsOrdineringVirkestoff), lhsOrdineringVirkestoff, rhsOrdineringVirkestoff)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff theOrdineringVirkestoff;
                theOrdineringVirkestoff = this.getOrdineringVirkestoff();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ordineringVirkestoff", theOrdineringVirkestoff), currentHashCode, theOrdineringVirkestoff);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;sequence&gt;
         *         &lt;element name="Id" type="{http://www.w3.org/2001/XMLSchema}ID"/&gt;
         *         &lt;element name="NavnVirkestoffOrdinering" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
         *         &lt;element name="LegemiddelformKort" type="{http://www.kith.no/xmlstds}CV"/&gt;
         *         &lt;element name="Reseptgruppe" type="{http://www.kith.no/xmlstds}CS"/&gt;
         *         &lt;element name="RefByttegruppe" type="{http://www.w3.org/2001/XMLSchema}IDREF" minOccurs="0"/&gt;
         *         &lt;element name="EnhetOrdinering" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
         *         &lt;element name="Atc" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
         *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}AdministreringLegemiddel" minOccurs="0"/&gt;
         *         &lt;element name="SvartTrekant" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
         *         &lt;element name="RefLegemiddelVirkestoff" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded"/&gt;
         *         &lt;element name="RefLegemiddelDose" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded"/&gt;
         *       &lt;/sequence&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "id",
            "navnVirkestoffOrdinering",
            "legemiddelformKort",
            "reseptgruppe",
            "refByttegruppe",
            "enhetOrdinering",
            "atc",
            "administreringLegemiddel",
            "svartTrekant",
            "refLegemiddelVirkestoff",
            "refLegemiddelDose"
        })
        public static class OrdineringVirkestoff
            implements Equals, HashCode, ToString
        {

            @XmlElement(name = "Id", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            @XmlSchemaType(name = "ID")
            protected String id;
            @XmlElement(name = "NavnVirkestoffOrdinering", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
            protected String navnVirkestoffOrdinering;
            @XmlElement(name = "LegemiddelformKort", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
            protected CV legemiddelformKort;
            @XmlElement(name = "Reseptgruppe", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
            protected CS reseptgruppe;
            @XmlElement(name = "RefByttegruppe", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
            @XmlIDREF
            @XmlSchemaType(name = "IDREF")
            protected Object refByttegruppe;
            @XmlElement(name = "EnhetOrdinering", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
            protected List<CV> enhetOrdinering;
            @XmlElement(name = "Atc", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
            protected CV atc;
            @XmlElement(name = "AdministreringLegemiddel")
            protected AdministreringLegemiddel administreringLegemiddel;
            @XmlElement(name = "SvartTrekant", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
            protected CV svartTrekant;
            @XmlElementRef(name = "RefLegemiddelVirkestoff", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", type = JAXBElement.class)
            protected List<JAXBElement<Object>> refLegemiddelVirkestoff;
            @XmlElementRef(name = "RefLegemiddelDose", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", type = JAXBElement.class)
            protected List<JAXBElement<Object>> refLegemiddelDose;

            /**
             * Gets the value of the id property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getId() {
                return id;
            }

            /**
             * Sets the value of the id property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setId(String value) {
                this.id = value;
            }

            /**
             * Gets the value of the navnVirkestoffOrdinering property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getNavnVirkestoffOrdinering() {
                return navnVirkestoffOrdinering;
            }

            /**
             * Sets the value of the navnVirkestoffOrdinering property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setNavnVirkestoffOrdinering(String value) {
                this.navnVirkestoffOrdinering = value;
            }

            /**
             * Gets the value of the legemiddelformKort property.
             * 
             * @return
             *     possible object is
             *     {@link CV }
             *     
             */
            public CV getLegemiddelformKort() {
                return legemiddelformKort;
            }

            /**
             * Sets the value of the legemiddelformKort property.
             * 
             * @param value
             *     allowed object is
             *     {@link CV }
             *     
             */
            public void setLegemiddelformKort(CV value) {
                this.legemiddelformKort = value;
            }

            /**
             * Gets the value of the reseptgruppe property.
             * 
             * @return
             *     possible object is
             *     {@link CS }
             *     
             */
            public CS getReseptgruppe() {
                return reseptgruppe;
            }

            /**
             * Sets the value of the reseptgruppe property.
             * 
             * @param value
             *     allowed object is
             *     {@link CS }
             *     
             */
            public void setReseptgruppe(CS value) {
                this.reseptgruppe = value;
            }

            /**
             * Gets the value of the refByttegruppe property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            public Object getRefByttegruppe() {
                return refByttegruppe;
            }

            /**
             * Sets the value of the refByttegruppe property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setRefByttegruppe(Object value) {
                this.refByttegruppe = value;
            }

            /**
             * Gets the value of the enhetOrdinering property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the enhetOrdinering property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getEnhetOrdinering().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link CV }
             * 
             * 
             */
            public List<CV> getEnhetOrdinering() {
                if (enhetOrdinering == null) {
                    enhetOrdinering = new ArrayList<CV>();
                }
                return this.enhetOrdinering;
            }

            /**
             * Gets the value of the atc property.
             * 
             * @return
             *     possible object is
             *     {@link CV }
             *     
             */
            public CV getAtc() {
                return atc;
            }

            /**
             * Sets the value of the atc property.
             * 
             * @param value
             *     allowed object is
             *     {@link CV }
             *     
             */
            public void setAtc(CV value) {
                this.atc = value;
            }

            /**
             * Gets the value of the administreringLegemiddel property.
             * 
             * @return
             *     possible object is
             *     {@link AdministreringLegemiddel }
             *     
             */
            public AdministreringLegemiddel getAdministreringLegemiddel() {
                return administreringLegemiddel;
            }

            /**
             * Sets the value of the administreringLegemiddel property.
             * 
             * @param value
             *     allowed object is
             *     {@link AdministreringLegemiddel }
             *     
             */
            public void setAdministreringLegemiddel(AdministreringLegemiddel value) {
                this.administreringLegemiddel = value;
            }

            /**
             * Gets the value of the svartTrekant property.
             * 
             * @return
             *     possible object is
             *     {@link CV }
             *     
             */
            public CV getSvartTrekant() {
                return svartTrekant;
            }

            /**
             * Sets the value of the svartTrekant property.
             * 
             * @param value
             *     allowed object is
             *     {@link CV }
             *     
             */
            public void setSvartTrekant(CV value) {
                this.svartTrekant = value;
            }

            /**
             * Gets the value of the refLegemiddelVirkestoff property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the refLegemiddelVirkestoff property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getRefLegemiddelVirkestoff().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link JAXBElement }{@code <}{@link Object }{@code >}
             * 
             * 
             */
            public List<JAXBElement<Object>> getRefLegemiddelVirkestoff() {
                if (refLegemiddelVirkestoff == null) {
                    refLegemiddelVirkestoff = new ArrayList<JAXBElement<Object>>();
                }
                return this.refLegemiddelVirkestoff;
            }

            /**
             * Gets the value of the refLegemiddelDose property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the refLegemiddelDose property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getRefLegemiddelDose().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link JAXBElement }{@code <}{@link Object }{@code >}
             * 
             * 
             */
            public List<JAXBElement<Object>> getRefLegemiddelDose() {
                if (refLegemiddelDose == null) {
                    refLegemiddelDose = new ArrayList<JAXBElement<Object>>();
                }
                return this.refLegemiddelDose;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theId;
                    theId = this.getId();
                    strategy.appendField(locator, this, "id", buffer, theId);
                }
                {
                    String theNavnVirkestoffOrdinering;
                    theNavnVirkestoffOrdinering = this.getNavnVirkestoffOrdinering();
                    strategy.appendField(locator, this, "navnVirkestoffOrdinering", buffer, theNavnVirkestoffOrdinering);
                }
                {
                    CV theLegemiddelformKort;
                    theLegemiddelformKort = this.getLegemiddelformKort();
                    strategy.appendField(locator, this, "legemiddelformKort", buffer, theLegemiddelformKort);
                }
                {
                    CS theReseptgruppe;
                    theReseptgruppe = this.getReseptgruppe();
                    strategy.appendField(locator, this, "reseptgruppe", buffer, theReseptgruppe);
                }
                {
                    Object theRefByttegruppe;
                    theRefByttegruppe = this.getRefByttegruppe();
                    strategy.appendField(locator, this, "refByttegruppe", buffer, theRefByttegruppe);
                }
                {
                    List<CV> theEnhetOrdinering;
                    theEnhetOrdinering = (((this.enhetOrdinering!= null)&&(!this.enhetOrdinering.isEmpty()))?this.getEnhetOrdinering():null);
                    strategy.appendField(locator, this, "enhetOrdinering", buffer, theEnhetOrdinering);
                }
                {
                    CV theAtc;
                    theAtc = this.getAtc();
                    strategy.appendField(locator, this, "atc", buffer, theAtc);
                }
                {
                    AdministreringLegemiddel theAdministreringLegemiddel;
                    theAdministreringLegemiddel = this.getAdministreringLegemiddel();
                    strategy.appendField(locator, this, "administreringLegemiddel", buffer, theAdministreringLegemiddel);
                }
                {
                    CV theSvartTrekant;
                    theSvartTrekant = this.getSvartTrekant();
                    strategy.appendField(locator, this, "svartTrekant", buffer, theSvartTrekant);
                }
                {
                    List<JAXBElement<Object>> theRefLegemiddelVirkestoff;
                    theRefLegemiddelVirkestoff = (((this.refLegemiddelVirkestoff!= null)&&(!this.refLegemiddelVirkestoff.isEmpty()))?this.getRefLegemiddelVirkestoff():null);
                    strategy.appendField(locator, this, "refLegemiddelVirkestoff", buffer, theRefLegemiddelVirkestoff);
                }
                {
                    List<JAXBElement<Object>> theRefLegemiddelDose;
                    theRefLegemiddelDose = (((this.refLegemiddelDose!= null)&&(!this.refLegemiddelDose.isEmpty()))?this.getRefLegemiddelDose():null);
                    strategy.appendField(locator, this, "refLegemiddelDose", buffer, theRefLegemiddelDose);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff that = ((KatOrdineringVirkestoff.OppfOrdineringVirkestoff.OrdineringVirkestoff) object);
                {
                    String lhsId;
                    lhsId = this.getId();
                    String rhsId;
                    rhsId = that.getId();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                        return false;
                    }
                }
                {
                    String lhsNavnVirkestoffOrdinering;
                    lhsNavnVirkestoffOrdinering = this.getNavnVirkestoffOrdinering();
                    String rhsNavnVirkestoffOrdinering;
                    rhsNavnVirkestoffOrdinering = that.getNavnVirkestoffOrdinering();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "navnVirkestoffOrdinering", lhsNavnVirkestoffOrdinering), LocatorUtils.property(thatLocator, "navnVirkestoffOrdinering", rhsNavnVirkestoffOrdinering), lhsNavnVirkestoffOrdinering, rhsNavnVirkestoffOrdinering)) {
                        return false;
                    }
                }
                {
                    CV lhsLegemiddelformKort;
                    lhsLegemiddelformKort = this.getLegemiddelformKort();
                    CV rhsLegemiddelformKort;
                    rhsLegemiddelformKort = that.getLegemiddelformKort();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "legemiddelformKort", lhsLegemiddelformKort), LocatorUtils.property(thatLocator, "legemiddelformKort", rhsLegemiddelformKort), lhsLegemiddelformKort, rhsLegemiddelformKort)) {
                        return false;
                    }
                }
                {
                    CS lhsReseptgruppe;
                    lhsReseptgruppe = this.getReseptgruppe();
                    CS rhsReseptgruppe;
                    rhsReseptgruppe = that.getReseptgruppe();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "reseptgruppe", lhsReseptgruppe), LocatorUtils.property(thatLocator, "reseptgruppe", rhsReseptgruppe), lhsReseptgruppe, rhsReseptgruppe)) {
                        return false;
                    }
                }
                {
                    Object lhsRefByttegruppe;
                    lhsRefByttegruppe = this.getRefByttegruppe();
                    Object rhsRefByttegruppe;
                    rhsRefByttegruppe = that.getRefByttegruppe();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "refByttegruppe", lhsRefByttegruppe), LocatorUtils.property(thatLocator, "refByttegruppe", rhsRefByttegruppe), lhsRefByttegruppe, rhsRefByttegruppe)) {
                        return false;
                    }
                }
                {
                    List<CV> lhsEnhetOrdinering;
                    lhsEnhetOrdinering = (((this.enhetOrdinering!= null)&&(!this.enhetOrdinering.isEmpty()))?this.getEnhetOrdinering():null);
                    List<CV> rhsEnhetOrdinering;
                    rhsEnhetOrdinering = (((that.enhetOrdinering!= null)&&(!that.enhetOrdinering.isEmpty()))?that.getEnhetOrdinering():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "enhetOrdinering", lhsEnhetOrdinering), LocatorUtils.property(thatLocator, "enhetOrdinering", rhsEnhetOrdinering), lhsEnhetOrdinering, rhsEnhetOrdinering)) {
                        return false;
                    }
                }
                {
                    CV lhsAtc;
                    lhsAtc = this.getAtc();
                    CV rhsAtc;
                    rhsAtc = that.getAtc();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "atc", lhsAtc), LocatorUtils.property(thatLocator, "atc", rhsAtc), lhsAtc, rhsAtc)) {
                        return false;
                    }
                }
                {
                    AdministreringLegemiddel lhsAdministreringLegemiddel;
                    lhsAdministreringLegemiddel = this.getAdministreringLegemiddel();
                    AdministreringLegemiddel rhsAdministreringLegemiddel;
                    rhsAdministreringLegemiddel = that.getAdministreringLegemiddel();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "administreringLegemiddel", lhsAdministreringLegemiddel), LocatorUtils.property(thatLocator, "administreringLegemiddel", rhsAdministreringLegemiddel), lhsAdministreringLegemiddel, rhsAdministreringLegemiddel)) {
                        return false;
                    }
                }
                {
                    CV lhsSvartTrekant;
                    lhsSvartTrekant = this.getSvartTrekant();
                    CV rhsSvartTrekant;
                    rhsSvartTrekant = that.getSvartTrekant();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "svartTrekant", lhsSvartTrekant), LocatorUtils.property(thatLocator, "svartTrekant", rhsSvartTrekant), lhsSvartTrekant, rhsSvartTrekant)) {
                        return false;
                    }
                }
                {
                    List<JAXBElement<Object>> lhsRefLegemiddelVirkestoff;
                    lhsRefLegemiddelVirkestoff = (((this.refLegemiddelVirkestoff!= null)&&(!this.refLegemiddelVirkestoff.isEmpty()))?this.getRefLegemiddelVirkestoff():null);
                    List<JAXBElement<Object>> rhsRefLegemiddelVirkestoff;
                    rhsRefLegemiddelVirkestoff = (((that.refLegemiddelVirkestoff!= null)&&(!that.refLegemiddelVirkestoff.isEmpty()))?that.getRefLegemiddelVirkestoff():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "refLegemiddelVirkestoff", lhsRefLegemiddelVirkestoff), LocatorUtils.property(thatLocator, "refLegemiddelVirkestoff", rhsRefLegemiddelVirkestoff), lhsRefLegemiddelVirkestoff, rhsRefLegemiddelVirkestoff)) {
                        return false;
                    }
                }
                {
                    List<JAXBElement<Object>> lhsRefLegemiddelDose;
                    lhsRefLegemiddelDose = (((this.refLegemiddelDose!= null)&&(!this.refLegemiddelDose.isEmpty()))?this.getRefLegemiddelDose():null);
                    List<JAXBElement<Object>> rhsRefLegemiddelDose;
                    rhsRefLegemiddelDose = (((that.refLegemiddelDose!= null)&&(!that.refLegemiddelDose.isEmpty()))?that.getRefLegemiddelDose():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "refLegemiddelDose", lhsRefLegemiddelDose), LocatorUtils.property(thatLocator, "refLegemiddelDose", rhsRefLegemiddelDose), lhsRefLegemiddelDose, rhsRefLegemiddelDose)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theId;
                    theId = this.getId();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
                }
                {
                    String theNavnVirkestoffOrdinering;
                    theNavnVirkestoffOrdinering = this.getNavnVirkestoffOrdinering();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "navnVirkestoffOrdinering", theNavnVirkestoffOrdinering), currentHashCode, theNavnVirkestoffOrdinering);
                }
                {
                    CV theLegemiddelformKort;
                    theLegemiddelformKort = this.getLegemiddelformKort();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legemiddelformKort", theLegemiddelformKort), currentHashCode, theLegemiddelformKort);
                }
                {
                    CS theReseptgruppe;
                    theReseptgruppe = this.getReseptgruppe();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reseptgruppe", theReseptgruppe), currentHashCode, theReseptgruppe);
                }
                {
                    Object theRefByttegruppe;
                    theRefByttegruppe = this.getRefByttegruppe();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refByttegruppe", theRefByttegruppe), currentHashCode, theRefByttegruppe);
                }
                {
                    List<CV> theEnhetOrdinering;
                    theEnhetOrdinering = (((this.enhetOrdinering!= null)&&(!this.enhetOrdinering.isEmpty()))?this.getEnhetOrdinering():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enhetOrdinering", theEnhetOrdinering), currentHashCode, theEnhetOrdinering);
                }
                {
                    CV theAtc;
                    theAtc = this.getAtc();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "atc", theAtc), currentHashCode, theAtc);
                }
                {
                    AdministreringLegemiddel theAdministreringLegemiddel;
                    theAdministreringLegemiddel = this.getAdministreringLegemiddel();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "administreringLegemiddel", theAdministreringLegemiddel), currentHashCode, theAdministreringLegemiddel);
                }
                {
                    CV theSvartTrekant;
                    theSvartTrekant = this.getSvartTrekant();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "svartTrekant", theSvartTrekant), currentHashCode, theSvartTrekant);
                }
                {
                    List<JAXBElement<Object>> theRefLegemiddelVirkestoff;
                    theRefLegemiddelVirkestoff = (((this.refLegemiddelVirkestoff!= null)&&(!this.refLegemiddelVirkestoff.isEmpty()))?this.getRefLegemiddelVirkestoff():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refLegemiddelVirkestoff", theRefLegemiddelVirkestoff), currentHashCode, theRefLegemiddelVirkestoff);
                }
                {
                    List<JAXBElement<Object>> theRefLegemiddelDose;
                    theRefLegemiddelDose = (((this.refLegemiddelDose!= null)&&(!this.refLegemiddelDose.isEmpty()))?this.getRefLegemiddelDose():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refLegemiddelDose", theRefLegemiddelDose), currentHashCode, theRefLegemiddelDose);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }

    }

}
