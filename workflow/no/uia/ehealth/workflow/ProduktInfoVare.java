//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="ProduktNr" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="Volum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="EnhetStorrelse" type="{http://www.kith.no/xmlstds}CV"/&gt;
 *         &lt;element name="AntPerPakning" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="RefVilkar" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="TillattMerMakspris" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "produktNr",
    "volum",
    "enhetStorrelse",
    "antPerPakning",
    "refVilkar",
    "tillattMerMakspris"
})
@XmlRootElement(name = "ProduktInfoVare")
public class ProduktInfoVare
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ProduktNr", required = true)
    protected String produktNr;
    @XmlElement(name = "Volum")
    protected String volum;
    @XmlElement(name = "EnhetStorrelse", required = true)
    protected CV enhetStorrelse;
    @XmlElement(name = "AntPerPakning")
    protected int antPerPakning;
    @XmlElementRef(name = "RefVilkar", namespace = "http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01", type = JAXBElement.class, required = false)
    protected List<JAXBElement<Object>> refVilkar;
    @XmlElement(name = "TillattMerMakspris")
    protected boolean tillattMerMakspris;

    /**
     * Gets the value of the produktNr property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProduktNr() {
        return produktNr;
    }

    /**
     * Sets the value of the produktNr property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProduktNr(String value) {
        this.produktNr = value;
    }

    /**
     * Gets the value of the volum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVolum() {
        return volum;
    }

    /**
     * Sets the value of the volum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVolum(String value) {
        this.volum = value;
    }

    /**
     * Gets the value of the enhetStorrelse property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getEnhetStorrelse() {
        return enhetStorrelse;
    }

    /**
     * Sets the value of the enhetStorrelse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setEnhetStorrelse(CV value) {
        this.enhetStorrelse = value;
    }

    /**
     * Gets the value of the antPerPakning property.
     * 
     */
    public int getAntPerPakning() {
        return antPerPakning;
    }

    /**
     * Sets the value of the antPerPakning property.
     * 
     */
    public void setAntPerPakning(int value) {
        this.antPerPakning = value;
    }

    /**
     * Gets the value of the refVilkar property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the refVilkar property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRefVilkar().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<Object>> getRefVilkar() {
        if (refVilkar == null) {
            refVilkar = new ArrayList<JAXBElement<Object>>();
        }
        return this.refVilkar;
    }

    /**
     * Gets the value of the tillattMerMakspris property.
     * 
     */
    public boolean isTillattMerMakspris() {
        return tillattMerMakspris;
    }

    /**
     * Sets the value of the tillattMerMakspris property.
     * 
     */
    public void setTillattMerMakspris(boolean value) {
        this.tillattMerMakspris = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theProduktNr;
            theProduktNr = this.getProduktNr();
            strategy.appendField(locator, this, "produktNr", buffer, theProduktNr);
        }
        {
            String theVolum;
            theVolum = this.getVolum();
            strategy.appendField(locator, this, "volum", buffer, theVolum);
        }
        {
            CV theEnhetStorrelse;
            theEnhetStorrelse = this.getEnhetStorrelse();
            strategy.appendField(locator, this, "enhetStorrelse", buffer, theEnhetStorrelse);
        }
        {
            int theAntPerPakning;
            theAntPerPakning = this.getAntPerPakning();
            strategy.appendField(locator, this, "antPerPakning", buffer, theAntPerPakning);
        }
        {
            List<JAXBElement<Object>> theRefVilkar;
            theRefVilkar = (((this.refVilkar!= null)&&(!this.refVilkar.isEmpty()))?this.getRefVilkar():null);
            strategy.appendField(locator, this, "refVilkar", buffer, theRefVilkar);
        }
        {
            boolean theTillattMerMakspris;
            theTillattMerMakspris = this.isTillattMerMakspris();
            strategy.appendField(locator, this, "tillattMerMakspris", buffer, theTillattMerMakspris);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProduktInfoVare)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ProduktInfoVare that = ((ProduktInfoVare) object);
        {
            String lhsProduktNr;
            lhsProduktNr = this.getProduktNr();
            String rhsProduktNr;
            rhsProduktNr = that.getProduktNr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "produktNr", lhsProduktNr), LocatorUtils.property(thatLocator, "produktNr", rhsProduktNr), lhsProduktNr, rhsProduktNr)) {
                return false;
            }
        }
        {
            String lhsVolum;
            lhsVolum = this.getVolum();
            String rhsVolum;
            rhsVolum = that.getVolum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "volum", lhsVolum), LocatorUtils.property(thatLocator, "volum", rhsVolum), lhsVolum, rhsVolum)) {
                return false;
            }
        }
        {
            CV lhsEnhetStorrelse;
            lhsEnhetStorrelse = this.getEnhetStorrelse();
            CV rhsEnhetStorrelse;
            rhsEnhetStorrelse = that.getEnhetStorrelse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enhetStorrelse", lhsEnhetStorrelse), LocatorUtils.property(thatLocator, "enhetStorrelse", rhsEnhetStorrelse), lhsEnhetStorrelse, rhsEnhetStorrelse)) {
                return false;
            }
        }
        {
            int lhsAntPerPakning;
            lhsAntPerPakning = this.getAntPerPakning();
            int rhsAntPerPakning;
            rhsAntPerPakning = that.getAntPerPakning();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "antPerPakning", lhsAntPerPakning), LocatorUtils.property(thatLocator, "antPerPakning", rhsAntPerPakning), lhsAntPerPakning, rhsAntPerPakning)) {
                return false;
            }
        }
        {
            List<JAXBElement<Object>> lhsRefVilkar;
            lhsRefVilkar = (((this.refVilkar!= null)&&(!this.refVilkar.isEmpty()))?this.getRefVilkar():null);
            List<JAXBElement<Object>> rhsRefVilkar;
            rhsRefVilkar = (((that.refVilkar!= null)&&(!that.refVilkar.isEmpty()))?that.getRefVilkar():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refVilkar", lhsRefVilkar), LocatorUtils.property(thatLocator, "refVilkar", rhsRefVilkar), lhsRefVilkar, rhsRefVilkar)) {
                return false;
            }
        }
        {
            boolean lhsTillattMerMakspris;
            lhsTillattMerMakspris = this.isTillattMerMakspris();
            boolean rhsTillattMerMakspris;
            rhsTillattMerMakspris = that.isTillattMerMakspris();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tillattMerMakspris", lhsTillattMerMakspris), LocatorUtils.property(thatLocator, "tillattMerMakspris", rhsTillattMerMakspris), lhsTillattMerMakspris, rhsTillattMerMakspris)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theProduktNr;
            theProduktNr = this.getProduktNr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "produktNr", theProduktNr), currentHashCode, theProduktNr);
        }
        {
            String theVolum;
            theVolum = this.getVolum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "volum", theVolum), currentHashCode, theVolum);
        }
        {
            CV theEnhetStorrelse;
            theEnhetStorrelse = this.getEnhetStorrelse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enhetStorrelse", theEnhetStorrelse), currentHashCode, theEnhetStorrelse);
        }
        {
            int theAntPerPakning;
            theAntPerPakning = this.getAntPerPakning();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "antPerPakning", theAntPerPakning), currentHashCode, theAntPerPakning);
        }
        {
            List<JAXBElement<Object>> theRefVilkar;
            theRefVilkar = (((this.refVilkar!= null)&&(!this.refVilkar.isEmpty()))?this.getRefVilkar():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refVilkar", theRefVilkar), currentHashCode, theRefVilkar);
        }
        {
            boolean theTillattMerMakspris;
            theTillattMerMakspris = this.isTillattMerMakspris();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tillattMerMakspris", theTillattMerMakspris), currentHashCode, theTillattMerMakspris);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
