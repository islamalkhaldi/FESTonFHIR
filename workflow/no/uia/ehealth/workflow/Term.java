//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Term" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="BeskrivelseTerm" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Sprak" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "term",
    "beskrivelseTerm",
    "sprak"
})
@XmlRootElement(name = "Term", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class Term
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Term", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected String term;
    @XmlElement(name = "BeskrivelseTerm", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected String beskrivelseTerm;
    @XmlElement(name = "Sprak", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected CS sprak;

    /**
     * Gets the value of the term property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTerm() {
        return term;
    }

    /**
     * Sets the value of the term property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTerm(String value) {
        this.term = value;
    }

    /**
     * Gets the value of the beskrivelseTerm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBeskrivelseTerm() {
        return beskrivelseTerm;
    }

    /**
     * Sets the value of the beskrivelseTerm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBeskrivelseTerm(String value) {
        this.beskrivelseTerm = value;
    }

    /**
     * Gets the value of the sprak property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getSprak() {
        return sprak;
    }

    /**
     * Sets the value of the sprak property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setSprak(CS value) {
        this.sprak = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theTerm;
            theTerm = this.getTerm();
            strategy.appendField(locator, this, "term", buffer, theTerm);
        }
        {
            String theBeskrivelseTerm;
            theBeskrivelseTerm = this.getBeskrivelseTerm();
            strategy.appendField(locator, this, "beskrivelseTerm", buffer, theBeskrivelseTerm);
        }
        {
            CS theSprak;
            theSprak = this.getSprak();
            strategy.appendField(locator, this, "sprak", buffer, theSprak);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Term)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Term that = ((Term) object);
        {
            String lhsTerm;
            lhsTerm = this.getTerm();
            String rhsTerm;
            rhsTerm = that.getTerm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "term", lhsTerm), LocatorUtils.property(thatLocator, "term", rhsTerm), lhsTerm, rhsTerm)) {
                return false;
            }
        }
        {
            String lhsBeskrivelseTerm;
            lhsBeskrivelseTerm = this.getBeskrivelseTerm();
            String rhsBeskrivelseTerm;
            rhsBeskrivelseTerm = that.getBeskrivelseTerm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "beskrivelseTerm", lhsBeskrivelseTerm), LocatorUtils.property(thatLocator, "beskrivelseTerm", rhsBeskrivelseTerm), lhsBeskrivelseTerm, rhsBeskrivelseTerm)) {
                return false;
            }
        }
        {
            CS lhsSprak;
            lhsSprak = this.getSprak();
            CS rhsSprak;
            rhsSprak = that.getSprak();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sprak", lhsSprak), LocatorUtils.property(thatLocator, "sprak", rhsSprak), lhsSprak, rhsSprak)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theTerm;
            theTerm = this.getTerm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "term", theTerm), currentHashCode, theTerm);
        }
        {
            String theBeskrivelseTerm;
            theBeskrivelseTerm = this.getBeskrivelseTerm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "beskrivelseTerm", theBeskrivelseTerm), currentHashCode, theBeskrivelseTerm);
        }
        {
            CS theSprak;
            theSprak = this.getSprak();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sprak", theSprak), currentHashCode, theSprak);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
