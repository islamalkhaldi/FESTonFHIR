//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Blandingsveske" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="RefBlandingsveske" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="Administrasjonsvei" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded"/&gt;
 *         &lt;element name="KanKnuses" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element name="KanApnes" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element name="Bolus" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element name="InjeksjonshastighetBolus" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element name="Deling" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element name="EnhetDosering" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="Kortdose" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="ForhandsregelInntak" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="BruksomradeEtikett" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "blandingsveske",
    "refBlandingsveske",
    "administrasjonsvei",
    "kanKnuses",
    "kanApnes",
    "bolus",
    "injeksjonshastighetBolus",
    "deling",
    "enhetDosering",
    "kortdose",
    "forhandsregelInntak",
    "bruksomradeEtikett"
})
@XmlRootElement(name = "AdministreringLegemiddel")
public class AdministreringLegemiddel
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Blandingsveske")
    protected Boolean blandingsveske;
    @XmlElementRef(name = "RefBlandingsveske", namespace = "http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01", type = JAXBElement.class, required = false)
    protected List<JAXBElement<Object>> refBlandingsveske;
    @XmlElement(name = "Administrasjonsvei", required = true)
    protected List<CV> administrasjonsvei;
    @XmlElement(name = "KanKnuses")
    protected CS kanKnuses;
    @XmlElement(name = "KanApnes")
    protected CS kanApnes;
    @XmlElement(name = "Bolus")
    protected CS bolus;
    @XmlElement(name = "InjeksjonshastighetBolus")
    protected CS injeksjonshastighetBolus;
    @XmlElement(name = "Deling")
    protected CS deling;
    @XmlElement(name = "EnhetDosering")
    protected List<CV> enhetDosering;
    @XmlElement(name = "Kortdose")
    protected List<CV> kortdose;
    @XmlElement(name = "ForhandsregelInntak")
    protected List<CV> forhandsregelInntak;
    @XmlElement(name = "BruksomradeEtikett")
    protected List<CV> bruksomradeEtikett;

    /**
     * Gets the value of the blandingsveske property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getBlandingsveske() {
        return blandingsveske;
    }

    /**
     * Sets the value of the blandingsveske property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setBlandingsveske(Boolean value) {
        this.blandingsveske = value;
    }

    /**
     * Gets the value of the refBlandingsveske property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the refBlandingsveske property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRefBlandingsveske().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<Object>> getRefBlandingsveske() {
        if (refBlandingsveske == null) {
            refBlandingsveske = new ArrayList<JAXBElement<Object>>();
        }
        return this.refBlandingsveske;
    }

    /**
     * Gets the value of the administrasjonsvei property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the administrasjonsvei property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAdministrasjonsvei().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getAdministrasjonsvei() {
        if (administrasjonsvei == null) {
            administrasjonsvei = new ArrayList<CV>();
        }
        return this.administrasjonsvei;
    }

    /**
     * Gets the value of the kanKnuses property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getKanKnuses() {
        return kanKnuses;
    }

    /**
     * Sets the value of the kanKnuses property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setKanKnuses(CS value) {
        this.kanKnuses = value;
    }

    /**
     * Gets the value of the kanApnes property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getKanApnes() {
        return kanApnes;
    }

    /**
     * Sets the value of the kanApnes property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setKanApnes(CS value) {
        this.kanApnes = value;
    }

    /**
     * Gets the value of the bolus property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getBolus() {
        return bolus;
    }

    /**
     * Sets the value of the bolus property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setBolus(CS value) {
        this.bolus = value;
    }

    /**
     * Gets the value of the injeksjonshastighetBolus property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getInjeksjonshastighetBolus() {
        return injeksjonshastighetBolus;
    }

    /**
     * Sets the value of the injeksjonshastighetBolus property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setInjeksjonshastighetBolus(CS value) {
        this.injeksjonshastighetBolus = value;
    }

    /**
     * Gets the value of the deling property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getDeling() {
        return deling;
    }

    /**
     * Sets the value of the deling property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setDeling(CS value) {
        this.deling = value;
    }

    /**
     * Gets the value of the enhetDosering property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the enhetDosering property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEnhetDosering().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getEnhetDosering() {
        if (enhetDosering == null) {
            enhetDosering = new ArrayList<CV>();
        }
        return this.enhetDosering;
    }

    /**
     * Gets the value of the kortdose property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the kortdose property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getKortdose().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getKortdose() {
        if (kortdose == null) {
            kortdose = new ArrayList<CV>();
        }
        return this.kortdose;
    }

    /**
     * Gets the value of the forhandsregelInntak property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the forhandsregelInntak property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getForhandsregelInntak().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getForhandsregelInntak() {
        if (forhandsregelInntak == null) {
            forhandsregelInntak = new ArrayList<CV>();
        }
        return this.forhandsregelInntak;
    }

    /**
     * Gets the value of the bruksomradeEtikett property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the bruksomradeEtikett property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBruksomradeEtikett().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getBruksomradeEtikett() {
        if (bruksomradeEtikett == null) {
            bruksomradeEtikett = new ArrayList<CV>();
        }
        return this.bruksomradeEtikett;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Boolean theBlandingsveske;
            theBlandingsveske = this.getBlandingsveske();
            strategy.appendField(locator, this, "blandingsveske", buffer, theBlandingsveske);
        }
        {
            List<JAXBElement<Object>> theRefBlandingsveske;
            theRefBlandingsveske = (((this.refBlandingsveske!= null)&&(!this.refBlandingsveske.isEmpty()))?this.getRefBlandingsveske():null);
            strategy.appendField(locator, this, "refBlandingsveske", buffer, theRefBlandingsveske);
        }
        {
            List<CV> theAdministrasjonsvei;
            theAdministrasjonsvei = (((this.administrasjonsvei!= null)&&(!this.administrasjonsvei.isEmpty()))?this.getAdministrasjonsvei():null);
            strategy.appendField(locator, this, "administrasjonsvei", buffer, theAdministrasjonsvei);
        }
        {
            CS theKanKnuses;
            theKanKnuses = this.getKanKnuses();
            strategy.appendField(locator, this, "kanKnuses", buffer, theKanKnuses);
        }
        {
            CS theKanApnes;
            theKanApnes = this.getKanApnes();
            strategy.appendField(locator, this, "kanApnes", buffer, theKanApnes);
        }
        {
            CS theBolus;
            theBolus = this.getBolus();
            strategy.appendField(locator, this, "bolus", buffer, theBolus);
        }
        {
            CS theInjeksjonshastighetBolus;
            theInjeksjonshastighetBolus = this.getInjeksjonshastighetBolus();
            strategy.appendField(locator, this, "injeksjonshastighetBolus", buffer, theInjeksjonshastighetBolus);
        }
        {
            CS theDeling;
            theDeling = this.getDeling();
            strategy.appendField(locator, this, "deling", buffer, theDeling);
        }
        {
            List<CV> theEnhetDosering;
            theEnhetDosering = (((this.enhetDosering!= null)&&(!this.enhetDosering.isEmpty()))?this.getEnhetDosering():null);
            strategy.appendField(locator, this, "enhetDosering", buffer, theEnhetDosering);
        }
        {
            List<CV> theKortdose;
            theKortdose = (((this.kortdose!= null)&&(!this.kortdose.isEmpty()))?this.getKortdose():null);
            strategy.appendField(locator, this, "kortdose", buffer, theKortdose);
        }
        {
            List<CV> theForhandsregelInntak;
            theForhandsregelInntak = (((this.forhandsregelInntak!= null)&&(!this.forhandsregelInntak.isEmpty()))?this.getForhandsregelInntak():null);
            strategy.appendField(locator, this, "forhandsregelInntak", buffer, theForhandsregelInntak);
        }
        {
            List<CV> theBruksomradeEtikett;
            theBruksomradeEtikett = (((this.bruksomradeEtikett!= null)&&(!this.bruksomradeEtikett.isEmpty()))?this.getBruksomradeEtikett():null);
            strategy.appendField(locator, this, "bruksomradeEtikett", buffer, theBruksomradeEtikett);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AdministreringLegemiddel)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AdministreringLegemiddel that = ((AdministreringLegemiddel) object);
        {
            Boolean lhsBlandingsveske;
            lhsBlandingsveske = this.getBlandingsveske();
            Boolean rhsBlandingsveske;
            rhsBlandingsveske = that.getBlandingsveske();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "blandingsveske", lhsBlandingsveske), LocatorUtils.property(thatLocator, "blandingsveske", rhsBlandingsveske), lhsBlandingsveske, rhsBlandingsveske)) {
                return false;
            }
        }
        {
            List<JAXBElement<Object>> lhsRefBlandingsveske;
            lhsRefBlandingsveske = (((this.refBlandingsveske!= null)&&(!this.refBlandingsveske.isEmpty()))?this.getRefBlandingsveske():null);
            List<JAXBElement<Object>> rhsRefBlandingsveske;
            rhsRefBlandingsveske = (((that.refBlandingsveske!= null)&&(!that.refBlandingsveske.isEmpty()))?that.getRefBlandingsveske():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refBlandingsveske", lhsRefBlandingsveske), LocatorUtils.property(thatLocator, "refBlandingsveske", rhsRefBlandingsveske), lhsRefBlandingsveske, rhsRefBlandingsveske)) {
                return false;
            }
        }
        {
            List<CV> lhsAdministrasjonsvei;
            lhsAdministrasjonsvei = (((this.administrasjonsvei!= null)&&(!this.administrasjonsvei.isEmpty()))?this.getAdministrasjonsvei():null);
            List<CV> rhsAdministrasjonsvei;
            rhsAdministrasjonsvei = (((that.administrasjonsvei!= null)&&(!that.administrasjonsvei.isEmpty()))?that.getAdministrasjonsvei():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "administrasjonsvei", lhsAdministrasjonsvei), LocatorUtils.property(thatLocator, "administrasjonsvei", rhsAdministrasjonsvei), lhsAdministrasjonsvei, rhsAdministrasjonsvei)) {
                return false;
            }
        }
        {
            CS lhsKanKnuses;
            lhsKanKnuses = this.getKanKnuses();
            CS rhsKanKnuses;
            rhsKanKnuses = that.getKanKnuses();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "kanKnuses", lhsKanKnuses), LocatorUtils.property(thatLocator, "kanKnuses", rhsKanKnuses), lhsKanKnuses, rhsKanKnuses)) {
                return false;
            }
        }
        {
            CS lhsKanApnes;
            lhsKanApnes = this.getKanApnes();
            CS rhsKanApnes;
            rhsKanApnes = that.getKanApnes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "kanApnes", lhsKanApnes), LocatorUtils.property(thatLocator, "kanApnes", rhsKanApnes), lhsKanApnes, rhsKanApnes)) {
                return false;
            }
        }
        {
            CS lhsBolus;
            lhsBolus = this.getBolus();
            CS rhsBolus;
            rhsBolus = that.getBolus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bolus", lhsBolus), LocatorUtils.property(thatLocator, "bolus", rhsBolus), lhsBolus, rhsBolus)) {
                return false;
            }
        }
        {
            CS lhsInjeksjonshastighetBolus;
            lhsInjeksjonshastighetBolus = this.getInjeksjonshastighetBolus();
            CS rhsInjeksjonshastighetBolus;
            rhsInjeksjonshastighetBolus = that.getInjeksjonshastighetBolus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "injeksjonshastighetBolus", lhsInjeksjonshastighetBolus), LocatorUtils.property(thatLocator, "injeksjonshastighetBolus", rhsInjeksjonshastighetBolus), lhsInjeksjonshastighetBolus, rhsInjeksjonshastighetBolus)) {
                return false;
            }
        }
        {
            CS lhsDeling;
            lhsDeling = this.getDeling();
            CS rhsDeling;
            rhsDeling = that.getDeling();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deling", lhsDeling), LocatorUtils.property(thatLocator, "deling", rhsDeling), lhsDeling, rhsDeling)) {
                return false;
            }
        }
        {
            List<CV> lhsEnhetDosering;
            lhsEnhetDosering = (((this.enhetDosering!= null)&&(!this.enhetDosering.isEmpty()))?this.getEnhetDosering():null);
            List<CV> rhsEnhetDosering;
            rhsEnhetDosering = (((that.enhetDosering!= null)&&(!that.enhetDosering.isEmpty()))?that.getEnhetDosering():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enhetDosering", lhsEnhetDosering), LocatorUtils.property(thatLocator, "enhetDosering", rhsEnhetDosering), lhsEnhetDosering, rhsEnhetDosering)) {
                return false;
            }
        }
        {
            List<CV> lhsKortdose;
            lhsKortdose = (((this.kortdose!= null)&&(!this.kortdose.isEmpty()))?this.getKortdose():null);
            List<CV> rhsKortdose;
            rhsKortdose = (((that.kortdose!= null)&&(!that.kortdose.isEmpty()))?that.getKortdose():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "kortdose", lhsKortdose), LocatorUtils.property(thatLocator, "kortdose", rhsKortdose), lhsKortdose, rhsKortdose)) {
                return false;
            }
        }
        {
            List<CV> lhsForhandsregelInntak;
            lhsForhandsregelInntak = (((this.forhandsregelInntak!= null)&&(!this.forhandsregelInntak.isEmpty()))?this.getForhandsregelInntak():null);
            List<CV> rhsForhandsregelInntak;
            rhsForhandsregelInntak = (((that.forhandsregelInntak!= null)&&(!that.forhandsregelInntak.isEmpty()))?that.getForhandsregelInntak():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "forhandsregelInntak", lhsForhandsregelInntak), LocatorUtils.property(thatLocator, "forhandsregelInntak", rhsForhandsregelInntak), lhsForhandsregelInntak, rhsForhandsregelInntak)) {
                return false;
            }
        }
        {
            List<CV> lhsBruksomradeEtikett;
            lhsBruksomradeEtikett = (((this.bruksomradeEtikett!= null)&&(!this.bruksomradeEtikett.isEmpty()))?this.getBruksomradeEtikett():null);
            List<CV> rhsBruksomradeEtikett;
            rhsBruksomradeEtikett = (((that.bruksomradeEtikett!= null)&&(!that.bruksomradeEtikett.isEmpty()))?that.getBruksomradeEtikett():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bruksomradeEtikett", lhsBruksomradeEtikett), LocatorUtils.property(thatLocator, "bruksomradeEtikett", rhsBruksomradeEtikett), lhsBruksomradeEtikett, rhsBruksomradeEtikett)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Boolean theBlandingsveske;
            theBlandingsveske = this.getBlandingsveske();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "blandingsveske", theBlandingsveske), currentHashCode, theBlandingsveske);
        }
        {
            List<JAXBElement<Object>> theRefBlandingsveske;
            theRefBlandingsveske = (((this.refBlandingsveske!= null)&&(!this.refBlandingsveske.isEmpty()))?this.getRefBlandingsveske():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refBlandingsveske", theRefBlandingsveske), currentHashCode, theRefBlandingsveske);
        }
        {
            List<CV> theAdministrasjonsvei;
            theAdministrasjonsvei = (((this.administrasjonsvei!= null)&&(!this.administrasjonsvei.isEmpty()))?this.getAdministrasjonsvei():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "administrasjonsvei", theAdministrasjonsvei), currentHashCode, theAdministrasjonsvei);
        }
        {
            CS theKanKnuses;
            theKanKnuses = this.getKanKnuses();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "kanKnuses", theKanKnuses), currentHashCode, theKanKnuses);
        }
        {
            CS theKanApnes;
            theKanApnes = this.getKanApnes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "kanApnes", theKanApnes), currentHashCode, theKanApnes);
        }
        {
            CS theBolus;
            theBolus = this.getBolus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bolus", theBolus), currentHashCode, theBolus);
        }
        {
            CS theInjeksjonshastighetBolus;
            theInjeksjonshastighetBolus = this.getInjeksjonshastighetBolus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "injeksjonshastighetBolus", theInjeksjonshastighetBolus), currentHashCode, theInjeksjonshastighetBolus);
        }
        {
            CS theDeling;
            theDeling = this.getDeling();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deling", theDeling), currentHashCode, theDeling);
        }
        {
            List<CV> theEnhetDosering;
            theEnhetDosering = (((this.enhetDosering!= null)&&(!this.enhetDosering.isEmpty()))?this.getEnhetDosering():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enhetDosering", theEnhetDosering), currentHashCode, theEnhetDosering);
        }
        {
            List<CV> theKortdose;
            theKortdose = (((this.kortdose!= null)&&(!this.kortdose.isEmpty()))?this.getKortdose():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "kortdose", theKortdose), currentHashCode, theKortdose);
        }
        {
            List<CV> theForhandsregelInntak;
            theForhandsregelInntak = (((this.forhandsregelInntak!= null)&&(!this.forhandsregelInntak.isEmpty()))?this.getForhandsregelInntak():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "forhandsregelInntak", theForhandsregelInntak), currentHashCode, theForhandsregelInntak);
        }
        {
            List<CV> theBruksomradeEtikett;
            theBruksomradeEtikett = (((this.bruksomradeEtikett!= null)&&(!this.bruksomradeEtikett.isEmpty()))?this.getBruksomradeEtikett():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bruksomradeEtikett", theBruksomradeEtikett), currentHashCode, theBruksomradeEtikett);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
