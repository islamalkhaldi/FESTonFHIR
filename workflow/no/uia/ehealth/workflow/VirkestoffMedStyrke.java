//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Id" type="{http://www.w3.org/2001/XMLSchema}ID"/&gt;
 *         &lt;element name="Styrke" type="{http://www.kith.no/xmlstds}PQ"/&gt;
 *         &lt;element name="StyrkeNevner" type="{http://www.kith.no/xmlstds}PQ" minOccurs="0"/&gt;
 *         &lt;element name="RefVirkestoff" type="{http://www.w3.org/2001/XMLSchema}IDREF"/&gt;
 *         &lt;element name="AlternativStyrke" type="{http://www.kith.no/xmlstds}PQ" minOccurs="0"/&gt;
 *         &lt;element name="AlternativStyrkeNevner" type="{http://www.kith.no/xmlstds}PQ" minOccurs="0"/&gt;
 *         &lt;element name="Styrkeoperator" type="{http://www.kith.no/xmlstds}CV"/&gt;
 *         &lt;element name="StyrkeOvreVerdi" type="{http://www.w3.org/2001/XMLSchema}double" minOccurs="0"/&gt;
 *         &lt;element name="AtcKombipreparat" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "id",
    "styrke",
    "styrkeNevner",
    "refVirkestoff",
    "alternativStyrke",
    "alternativStyrkeNevner",
    "styrkeoperator",
    "styrkeOvreVerdi",
    "atcKombipreparat"
})
@XmlRootElement(name = "VirkestoffMedStyrke")
public class VirkestoffMedStyrke
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Id", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlElement(name = "Styrke", required = true)
    protected PQ styrke;
    @XmlElement(name = "StyrkeNevner")
    protected PQ styrkeNevner;
    @XmlElement(name = "RefVirkestoff", required = true)
    @XmlIDREF
    @XmlSchemaType(name = "IDREF")
    protected Object refVirkestoff;
    @XmlElement(name = "AlternativStyrke")
    protected PQ alternativStyrke;
    @XmlElement(name = "AlternativStyrkeNevner")
    protected PQ alternativStyrkeNevner;
    @XmlElement(name = "Styrkeoperator", required = true)
    protected CV styrkeoperator;
    @XmlElement(name = "StyrkeOvreVerdi")
    protected Double styrkeOvreVerdi;
    @XmlElement(name = "AtcKombipreparat")
    protected CV atcKombipreparat;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the styrke property.
     * 
     * @return
     *     possible object is
     *     {@link PQ }
     *     
     */
    public PQ getStyrke() {
        return styrke;
    }

    /**
     * Sets the value of the styrke property.
     * 
     * @param value
     *     allowed object is
     *     {@link PQ }
     *     
     */
    public void setStyrke(PQ value) {
        this.styrke = value;
    }

    /**
     * Gets the value of the styrkeNevner property.
     * 
     * @return
     *     possible object is
     *     {@link PQ }
     *     
     */
    public PQ getStyrkeNevner() {
        return styrkeNevner;
    }

    /**
     * Sets the value of the styrkeNevner property.
     * 
     * @param value
     *     allowed object is
     *     {@link PQ }
     *     
     */
    public void setStyrkeNevner(PQ value) {
        this.styrkeNevner = value;
    }

    /**
     * Gets the value of the refVirkestoff property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getRefVirkestoff() {
        return refVirkestoff;
    }

    /**
     * Sets the value of the refVirkestoff property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setRefVirkestoff(Object value) {
        this.refVirkestoff = value;
    }

    /**
     * Gets the value of the alternativStyrke property.
     * 
     * @return
     *     possible object is
     *     {@link PQ }
     *     
     */
    public PQ getAlternativStyrke() {
        return alternativStyrke;
    }

    /**
     * Sets the value of the alternativStyrke property.
     * 
     * @param value
     *     allowed object is
     *     {@link PQ }
     *     
     */
    public void setAlternativStyrke(PQ value) {
        this.alternativStyrke = value;
    }

    /**
     * Gets the value of the alternativStyrkeNevner property.
     * 
     * @return
     *     possible object is
     *     {@link PQ }
     *     
     */
    public PQ getAlternativStyrkeNevner() {
        return alternativStyrkeNevner;
    }

    /**
     * Sets the value of the alternativStyrkeNevner property.
     * 
     * @param value
     *     allowed object is
     *     {@link PQ }
     *     
     */
    public void setAlternativStyrkeNevner(PQ value) {
        this.alternativStyrkeNevner = value;
    }

    /**
     * Gets the value of the styrkeoperator property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getStyrkeoperator() {
        return styrkeoperator;
    }

    /**
     * Sets the value of the styrkeoperator property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setStyrkeoperator(CV value) {
        this.styrkeoperator = value;
    }

    /**
     * Gets the value of the styrkeOvreVerdi property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getStyrkeOvreVerdi() {
        return styrkeOvreVerdi;
    }

    /**
     * Sets the value of the styrkeOvreVerdi property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setStyrkeOvreVerdi(Double value) {
        this.styrkeOvreVerdi = value;
    }

    /**
     * Gets the value of the atcKombipreparat property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getAtcKombipreparat() {
        return atcKombipreparat;
    }

    /**
     * Sets the value of the atcKombipreparat property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setAtcKombipreparat(CV value) {
        this.atcKombipreparat = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            PQ theStyrke;
            theStyrke = this.getStyrke();
            strategy.appendField(locator, this, "styrke", buffer, theStyrke);
        }
        {
            PQ theStyrkeNevner;
            theStyrkeNevner = this.getStyrkeNevner();
            strategy.appendField(locator, this, "styrkeNevner", buffer, theStyrkeNevner);
        }
        {
            Object theRefVirkestoff;
            theRefVirkestoff = this.getRefVirkestoff();
            strategy.appendField(locator, this, "refVirkestoff", buffer, theRefVirkestoff);
        }
        {
            PQ theAlternativStyrke;
            theAlternativStyrke = this.getAlternativStyrke();
            strategy.appendField(locator, this, "alternativStyrke", buffer, theAlternativStyrke);
        }
        {
            PQ theAlternativStyrkeNevner;
            theAlternativStyrkeNevner = this.getAlternativStyrkeNevner();
            strategy.appendField(locator, this, "alternativStyrkeNevner", buffer, theAlternativStyrkeNevner);
        }
        {
            CV theStyrkeoperator;
            theStyrkeoperator = this.getStyrkeoperator();
            strategy.appendField(locator, this, "styrkeoperator", buffer, theStyrkeoperator);
        }
        {
            Double theStyrkeOvreVerdi;
            theStyrkeOvreVerdi = this.getStyrkeOvreVerdi();
            strategy.appendField(locator, this, "styrkeOvreVerdi", buffer, theStyrkeOvreVerdi);
        }
        {
            CV theAtcKombipreparat;
            theAtcKombipreparat = this.getAtcKombipreparat();
            strategy.appendField(locator, this, "atcKombipreparat", buffer, theAtcKombipreparat);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof VirkestoffMedStyrke)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final VirkestoffMedStyrke that = ((VirkestoffMedStyrke) object);
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            PQ lhsStyrke;
            lhsStyrke = this.getStyrke();
            PQ rhsStyrke;
            rhsStyrke = that.getStyrke();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "styrke", lhsStyrke), LocatorUtils.property(thatLocator, "styrke", rhsStyrke), lhsStyrke, rhsStyrke)) {
                return false;
            }
        }
        {
            PQ lhsStyrkeNevner;
            lhsStyrkeNevner = this.getStyrkeNevner();
            PQ rhsStyrkeNevner;
            rhsStyrkeNevner = that.getStyrkeNevner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "styrkeNevner", lhsStyrkeNevner), LocatorUtils.property(thatLocator, "styrkeNevner", rhsStyrkeNevner), lhsStyrkeNevner, rhsStyrkeNevner)) {
                return false;
            }
        }
        {
            Object lhsRefVirkestoff;
            lhsRefVirkestoff = this.getRefVirkestoff();
            Object rhsRefVirkestoff;
            rhsRefVirkestoff = that.getRefVirkestoff();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refVirkestoff", lhsRefVirkestoff), LocatorUtils.property(thatLocator, "refVirkestoff", rhsRefVirkestoff), lhsRefVirkestoff, rhsRefVirkestoff)) {
                return false;
            }
        }
        {
            PQ lhsAlternativStyrke;
            lhsAlternativStyrke = this.getAlternativStyrke();
            PQ rhsAlternativStyrke;
            rhsAlternativStyrke = that.getAlternativStyrke();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "alternativStyrke", lhsAlternativStyrke), LocatorUtils.property(thatLocator, "alternativStyrke", rhsAlternativStyrke), lhsAlternativStyrke, rhsAlternativStyrke)) {
                return false;
            }
        }
        {
            PQ lhsAlternativStyrkeNevner;
            lhsAlternativStyrkeNevner = this.getAlternativStyrkeNevner();
            PQ rhsAlternativStyrkeNevner;
            rhsAlternativStyrkeNevner = that.getAlternativStyrkeNevner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "alternativStyrkeNevner", lhsAlternativStyrkeNevner), LocatorUtils.property(thatLocator, "alternativStyrkeNevner", rhsAlternativStyrkeNevner), lhsAlternativStyrkeNevner, rhsAlternativStyrkeNevner)) {
                return false;
            }
        }
        {
            CV lhsStyrkeoperator;
            lhsStyrkeoperator = this.getStyrkeoperator();
            CV rhsStyrkeoperator;
            rhsStyrkeoperator = that.getStyrkeoperator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "styrkeoperator", lhsStyrkeoperator), LocatorUtils.property(thatLocator, "styrkeoperator", rhsStyrkeoperator), lhsStyrkeoperator, rhsStyrkeoperator)) {
                return false;
            }
        }
        {
            Double lhsStyrkeOvreVerdi;
            lhsStyrkeOvreVerdi = this.getStyrkeOvreVerdi();
            Double rhsStyrkeOvreVerdi;
            rhsStyrkeOvreVerdi = that.getStyrkeOvreVerdi();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "styrkeOvreVerdi", lhsStyrkeOvreVerdi), LocatorUtils.property(thatLocator, "styrkeOvreVerdi", rhsStyrkeOvreVerdi), lhsStyrkeOvreVerdi, rhsStyrkeOvreVerdi)) {
                return false;
            }
        }
        {
            CV lhsAtcKombipreparat;
            lhsAtcKombipreparat = this.getAtcKombipreparat();
            CV rhsAtcKombipreparat;
            rhsAtcKombipreparat = that.getAtcKombipreparat();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "atcKombipreparat", lhsAtcKombipreparat), LocatorUtils.property(thatLocator, "atcKombipreparat", rhsAtcKombipreparat), lhsAtcKombipreparat, rhsAtcKombipreparat)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            PQ theStyrke;
            theStyrke = this.getStyrke();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "styrke", theStyrke), currentHashCode, theStyrke);
        }
        {
            PQ theStyrkeNevner;
            theStyrkeNevner = this.getStyrkeNevner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "styrkeNevner", theStyrkeNevner), currentHashCode, theStyrkeNevner);
        }
        {
            Object theRefVirkestoff;
            theRefVirkestoff = this.getRefVirkestoff();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refVirkestoff", theRefVirkestoff), currentHashCode, theRefVirkestoff);
        }
        {
            PQ theAlternativStyrke;
            theAlternativStyrke = this.getAlternativStyrke();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "alternativStyrke", theAlternativStyrke), currentHashCode, theAlternativStyrke);
        }
        {
            PQ theAlternativStyrkeNevner;
            theAlternativStyrkeNevner = this.getAlternativStyrkeNevner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "alternativStyrkeNevner", theAlternativStyrkeNevner), currentHashCode, theAlternativStyrkeNevner);
        }
        {
            CV theStyrkeoperator;
            theStyrkeoperator = this.getStyrkeoperator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "styrkeoperator", theStyrkeoperator), currentHashCode, theStyrkeoperator);
        }
        {
            Double theStyrkeOvreVerdi;
            theStyrkeOvreVerdi = this.getStyrkeOvreVerdi();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "styrkeOvreVerdi", theStyrkeOvreVerdi), currentHashCode, theStyrkeOvreVerdi);
        }
        {
            CV theAtcKombipreparat;
            theAtcKombipreparat = this.getAtcKombipreparat();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "atcKombipreparat", theAtcKombipreparat), currentHashCode, theAtcKombipreparat);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
