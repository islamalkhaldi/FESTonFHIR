//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="RefLegemiddelMerkevare" type="{http://www.w3.org/2001/XMLSchema}IDREF"/&gt;
 *         &lt;element name="Pakningsstr" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="EnhetPakning" type="{http://www.kith.no/xmlstds}CV"/&gt;
 *         &lt;element name="Pakningstype" type="{http://www.kith.no/xmlstds}CV"/&gt;
 *         &lt;element name="Multippel" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="Antall" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="Mengde" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="Sortering" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="DDD" type="{http://www.kith.no/xmlstds}PQ" minOccurs="0"/&gt;
 *         &lt;element name="Statistikkfaktor" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Pakningskomponent" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "refLegemiddelMerkevare",
    "pakningsstr",
    "enhetPakning",
    "pakningstype",
    "multippel",
    "antall",
    "mengde",
    "sortering",
    "ddd",
    "statistikkfaktor",
    "pakningskomponent"
})
@XmlRootElement(name = "Pakningsinfo")
public class Pakningsinfo
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "RefLegemiddelMerkevare", required = true)
    @XmlIDREF
    @XmlSchemaType(name = "IDREF")
    protected Object refLegemiddelMerkevare;
    @XmlElement(name = "Pakningsstr", required = true)
    protected String pakningsstr;
    @XmlElement(name = "EnhetPakning", required = true)
    protected CV enhetPakning;
    @XmlElement(name = "Pakningstype", required = true)
    protected CV pakningstype;
    @XmlElement(name = "Multippel")
    protected Integer multippel;
    @XmlElement(name = "Antall")
    protected Integer antall;
    @XmlElement(name = "Mengde", required = true)
    protected BigDecimal mengde;
    @XmlElement(name = "Sortering")
    protected Integer sortering;
    @XmlElement(name = "DDD")
    protected PQ ddd;
    @XmlElement(name = "Statistikkfaktor")
    protected BigDecimal statistikkfaktor;
    @XmlElement(name = "Pakningskomponent")
    protected List<Pakningskomponent> pakningskomponent;

    /**
     * Gets the value of the refLegemiddelMerkevare property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getRefLegemiddelMerkevare() {
        return refLegemiddelMerkevare;
    }

    /**
     * Sets the value of the refLegemiddelMerkevare property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setRefLegemiddelMerkevare(Object value) {
        this.refLegemiddelMerkevare = value;
    }

    /**
     * Gets the value of the pakningsstr property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPakningsstr() {
        return pakningsstr;
    }

    /**
     * Sets the value of the pakningsstr property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPakningsstr(String value) {
        this.pakningsstr = value;
    }

    /**
     * Gets the value of the enhetPakning property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getEnhetPakning() {
        return enhetPakning;
    }

    /**
     * Sets the value of the enhetPakning property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setEnhetPakning(CV value) {
        this.enhetPakning = value;
    }

    /**
     * Gets the value of the pakningstype property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getPakningstype() {
        return pakningstype;
    }

    /**
     * Sets the value of the pakningstype property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setPakningstype(CV value) {
        this.pakningstype = value;
    }

    /**
     * Gets the value of the multippel property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getMultippel() {
        return multippel;
    }

    /**
     * Sets the value of the multippel property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMultippel(Integer value) {
        this.multippel = value;
    }

    /**
     * Gets the value of the antall property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getAntall() {
        return antall;
    }

    /**
     * Sets the value of the antall property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setAntall(Integer value) {
        this.antall = value;
    }

    /**
     * Gets the value of the mengde property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMengde() {
        return mengde;
    }

    /**
     * Sets the value of the mengde property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMengde(BigDecimal value) {
        this.mengde = value;
    }

    /**
     * Gets the value of the sortering property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getSortering() {
        return sortering;
    }

    /**
     * Sets the value of the sortering property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setSortering(Integer value) {
        this.sortering = value;
    }

    /**
     * Gets the value of the ddd property.
     * 
     * @return
     *     possible object is
     *     {@link PQ }
     *     
     */
    public PQ getDDD() {
        return ddd;
    }

    /**
     * Sets the value of the ddd property.
     * 
     * @param value
     *     allowed object is
     *     {@link PQ }
     *     
     */
    public void setDDD(PQ value) {
        this.ddd = value;
    }

    /**
     * Gets the value of the statistikkfaktor property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getStatistikkfaktor() {
        return statistikkfaktor;
    }

    /**
     * Sets the value of the statistikkfaktor property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setStatistikkfaktor(BigDecimal value) {
        this.statistikkfaktor = value;
    }

    /**
     * Gets the value of the pakningskomponent property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the pakningskomponent property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPakningskomponent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Pakningskomponent }
     * 
     * 
     */
    public List<Pakningskomponent> getPakningskomponent() {
        if (pakningskomponent == null) {
            pakningskomponent = new ArrayList<Pakningskomponent>();
        }
        return this.pakningskomponent;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Object theRefLegemiddelMerkevare;
            theRefLegemiddelMerkevare = this.getRefLegemiddelMerkevare();
            strategy.appendField(locator, this, "refLegemiddelMerkevare", buffer, theRefLegemiddelMerkevare);
        }
        {
            String thePakningsstr;
            thePakningsstr = this.getPakningsstr();
            strategy.appendField(locator, this, "pakningsstr", buffer, thePakningsstr);
        }
        {
            CV theEnhetPakning;
            theEnhetPakning = this.getEnhetPakning();
            strategy.appendField(locator, this, "enhetPakning", buffer, theEnhetPakning);
        }
        {
            CV thePakningstype;
            thePakningstype = this.getPakningstype();
            strategy.appendField(locator, this, "pakningstype", buffer, thePakningstype);
        }
        {
            Integer theMultippel;
            theMultippel = this.getMultippel();
            strategy.appendField(locator, this, "multippel", buffer, theMultippel);
        }
        {
            Integer theAntall;
            theAntall = this.getAntall();
            strategy.appendField(locator, this, "antall", buffer, theAntall);
        }
        {
            BigDecimal theMengde;
            theMengde = this.getMengde();
            strategy.appendField(locator, this, "mengde", buffer, theMengde);
        }
        {
            Integer theSortering;
            theSortering = this.getSortering();
            strategy.appendField(locator, this, "sortering", buffer, theSortering);
        }
        {
            PQ theDDD;
            theDDD = this.getDDD();
            strategy.appendField(locator, this, "ddd", buffer, theDDD);
        }
        {
            BigDecimal theStatistikkfaktor;
            theStatistikkfaktor = this.getStatistikkfaktor();
            strategy.appendField(locator, this, "statistikkfaktor", buffer, theStatistikkfaktor);
        }
        {
            List<Pakningskomponent> thePakningskomponent;
            thePakningskomponent = (((this.pakningskomponent!= null)&&(!this.pakningskomponent.isEmpty()))?this.getPakningskomponent():null);
            strategy.appendField(locator, this, "pakningskomponent", buffer, thePakningskomponent);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Pakningsinfo)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Pakningsinfo that = ((Pakningsinfo) object);
        {
            Object lhsRefLegemiddelMerkevare;
            lhsRefLegemiddelMerkevare = this.getRefLegemiddelMerkevare();
            Object rhsRefLegemiddelMerkevare;
            rhsRefLegemiddelMerkevare = that.getRefLegemiddelMerkevare();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refLegemiddelMerkevare", lhsRefLegemiddelMerkevare), LocatorUtils.property(thatLocator, "refLegemiddelMerkevare", rhsRefLegemiddelMerkevare), lhsRefLegemiddelMerkevare, rhsRefLegemiddelMerkevare)) {
                return false;
            }
        }
        {
            String lhsPakningsstr;
            lhsPakningsstr = this.getPakningsstr();
            String rhsPakningsstr;
            rhsPakningsstr = that.getPakningsstr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pakningsstr", lhsPakningsstr), LocatorUtils.property(thatLocator, "pakningsstr", rhsPakningsstr), lhsPakningsstr, rhsPakningsstr)) {
                return false;
            }
        }
        {
            CV lhsEnhetPakning;
            lhsEnhetPakning = this.getEnhetPakning();
            CV rhsEnhetPakning;
            rhsEnhetPakning = that.getEnhetPakning();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enhetPakning", lhsEnhetPakning), LocatorUtils.property(thatLocator, "enhetPakning", rhsEnhetPakning), lhsEnhetPakning, rhsEnhetPakning)) {
                return false;
            }
        }
        {
            CV lhsPakningstype;
            lhsPakningstype = this.getPakningstype();
            CV rhsPakningstype;
            rhsPakningstype = that.getPakningstype();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pakningstype", lhsPakningstype), LocatorUtils.property(thatLocator, "pakningstype", rhsPakningstype), lhsPakningstype, rhsPakningstype)) {
                return false;
            }
        }
        {
            Integer lhsMultippel;
            lhsMultippel = this.getMultippel();
            Integer rhsMultippel;
            rhsMultippel = that.getMultippel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "multippel", lhsMultippel), LocatorUtils.property(thatLocator, "multippel", rhsMultippel), lhsMultippel, rhsMultippel)) {
                return false;
            }
        }
        {
            Integer lhsAntall;
            lhsAntall = this.getAntall();
            Integer rhsAntall;
            rhsAntall = that.getAntall();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "antall", lhsAntall), LocatorUtils.property(thatLocator, "antall", rhsAntall), lhsAntall, rhsAntall)) {
                return false;
            }
        }
        {
            BigDecimal lhsMengde;
            lhsMengde = this.getMengde();
            BigDecimal rhsMengde;
            rhsMengde = that.getMengde();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mengde", lhsMengde), LocatorUtils.property(thatLocator, "mengde", rhsMengde), lhsMengde, rhsMengde)) {
                return false;
            }
        }
        {
            Integer lhsSortering;
            lhsSortering = this.getSortering();
            Integer rhsSortering;
            rhsSortering = that.getSortering();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sortering", lhsSortering), LocatorUtils.property(thatLocator, "sortering", rhsSortering), lhsSortering, rhsSortering)) {
                return false;
            }
        }
        {
            PQ lhsDDD;
            lhsDDD = this.getDDD();
            PQ rhsDDD;
            rhsDDD = that.getDDD();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ddd", lhsDDD), LocatorUtils.property(thatLocator, "ddd", rhsDDD), lhsDDD, rhsDDD)) {
                return false;
            }
        }
        {
            BigDecimal lhsStatistikkfaktor;
            lhsStatistikkfaktor = this.getStatistikkfaktor();
            BigDecimal rhsStatistikkfaktor;
            rhsStatistikkfaktor = that.getStatistikkfaktor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "statistikkfaktor", lhsStatistikkfaktor), LocatorUtils.property(thatLocator, "statistikkfaktor", rhsStatistikkfaktor), lhsStatistikkfaktor, rhsStatistikkfaktor)) {
                return false;
            }
        }
        {
            List<Pakningskomponent> lhsPakningskomponent;
            lhsPakningskomponent = (((this.pakningskomponent!= null)&&(!this.pakningskomponent.isEmpty()))?this.getPakningskomponent():null);
            List<Pakningskomponent> rhsPakningskomponent;
            rhsPakningskomponent = (((that.pakningskomponent!= null)&&(!that.pakningskomponent.isEmpty()))?that.getPakningskomponent():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pakningskomponent", lhsPakningskomponent), LocatorUtils.property(thatLocator, "pakningskomponent", rhsPakningskomponent), lhsPakningskomponent, rhsPakningskomponent)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Object theRefLegemiddelMerkevare;
            theRefLegemiddelMerkevare = this.getRefLegemiddelMerkevare();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refLegemiddelMerkevare", theRefLegemiddelMerkevare), currentHashCode, theRefLegemiddelMerkevare);
        }
        {
            String thePakningsstr;
            thePakningsstr = this.getPakningsstr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pakningsstr", thePakningsstr), currentHashCode, thePakningsstr);
        }
        {
            CV theEnhetPakning;
            theEnhetPakning = this.getEnhetPakning();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enhetPakning", theEnhetPakning), currentHashCode, theEnhetPakning);
        }
        {
            CV thePakningstype;
            thePakningstype = this.getPakningstype();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pakningstype", thePakningstype), currentHashCode, thePakningstype);
        }
        {
            Integer theMultippel;
            theMultippel = this.getMultippel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "multippel", theMultippel), currentHashCode, theMultippel);
        }
        {
            Integer theAntall;
            theAntall = this.getAntall();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "antall", theAntall), currentHashCode, theAntall);
        }
        {
            BigDecimal theMengde;
            theMengde = this.getMengde();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mengde", theMengde), currentHashCode, theMengde);
        }
        {
            Integer theSortering;
            theSortering = this.getSortering();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sortering", theSortering), currentHashCode, theSortering);
        }
        {
            PQ theDDD;
            theDDD = this.getDDD();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ddd", theDDD), currentHashCode, theDDD);
        }
        {
            BigDecimal theStatistikkfaktor;
            theStatistikkfaktor = this.getStatistikkfaktor();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "statistikkfaktor", theStatistikkfaktor), currentHashCode, theStatistikkfaktor);
        }
        {
            List<Pakningskomponent> thePakningskomponent;
            thePakningskomponent = (((this.pakningskomponent!= null)&&(!this.pakningskomponent.isEmpty()))?this.getPakningskomponent():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pakningskomponent", thePakningskomponent), currentHashCode, thePakningskomponent);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
