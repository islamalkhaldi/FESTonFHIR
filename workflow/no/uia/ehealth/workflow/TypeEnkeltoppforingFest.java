//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for typeEnkeltoppforingFest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEnkeltoppforingFest"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Id" type="{http://www.w3.org/2001/XMLSchema}ID"/&gt;
 *         &lt;element name="Tidspunkt" type="{http://www.w3.org/2001/XMLSchema}dateTime"/&gt;
 *         &lt;element name="Status" type="{http://www.kith.no/xmlstds}CS"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEnkeltoppforingFest", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", propOrder = {
    "id",
    "tidspunkt",
    "status"
})
@XmlSeeAlso({
    no.uia.ehealth.workflow.KatLegemiddelMerkevare.OppfLegemiddelMerkevare.class,
    no.uia.ehealth.workflow.KatLegemiddelpakning.OppfLegemiddelpakning.class,
    no.uia.ehealth.workflow.KatVirkestoff.OppfVirkestoff.class,
    no.uia.ehealth.workflow.KatOrdineringVirkestoff.OppfOrdineringVirkestoff.class,
    no.uia.ehealth.workflow.KatLegemiddelVirkestoff.OppfLegemiddelVirkestoff.class,
    no.uia.ehealth.workflow.KatHandelsvare.OppfHandelsvare.class,
    no.uia.ehealth.workflow.KatDiagnose.OppfDiagnose.class,
    no.uia.ehealth.workflow.KatRefusjon.OppfRefusjon.class,
    no.uia.ehealth.workflow.KatVilkar.OppfVilkar.class,
    no.uia.ehealth.workflow.KatVarselSlv.OppfVarselSlv.class,
    no.uia.ehealth.workflow.KatKodeverk.OppfKodeverk.class,
    no.uia.ehealth.workflow.KatByttegruppe.OppfByttegruppe.class,
    no.uia.ehealth.workflow.KatLegemiddeldose.OppfLegemiddeldose.class,
    no.uia.ehealth.workflow.KatInteraksjon.OppfInteraksjon.class,
    no.uia.ehealth.workflow.KatStrDosering.OppfStrDosering.class
})
public class TypeEnkeltoppforingFest
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Id", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlElement(name = "Tidspunkt", required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar tidspunkt;
    @XmlElement(name = "Status", required = true)
    protected CS status;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the tidspunkt property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getTidspunkt() {
        return tidspunkt;
    }

    /**
     * Sets the value of the tidspunkt property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setTidspunkt(XMLGregorianCalendar value) {
        this.tidspunkt = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setStatus(CS value) {
        this.status = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            XMLGregorianCalendar theTidspunkt;
            theTidspunkt = this.getTidspunkt();
            strategy.appendField(locator, this, "tidspunkt", buffer, theTidspunkt);
        }
        {
            CS theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TypeEnkeltoppforingFest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TypeEnkeltoppforingFest that = ((TypeEnkeltoppforingFest) object);
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsTidspunkt;
            lhsTidspunkt = this.getTidspunkt();
            XMLGregorianCalendar rhsTidspunkt;
            rhsTidspunkt = that.getTidspunkt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tidspunkt", lhsTidspunkt), LocatorUtils.property(thatLocator, "tidspunkt", rhsTidspunkt), lhsTidspunkt, rhsTidspunkt)) {
                return false;
            }
        }
        {
            CS lhsStatus;
            lhsStatus = this.getStatus();
            CS rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            XMLGregorianCalendar theTidspunkt;
            theTidspunkt = this.getTidspunkt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tidspunkt", theTidspunkt), currentHashCode, theTidspunkt);
        }
        {
            CS theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
