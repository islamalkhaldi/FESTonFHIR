//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}typeLegemiddel"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Id" type="{http://www.w3.org/2001/XMLSchema}ID"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}SortertVirkestoffMedStyrke" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}SortertVirkestoffUtenStyrke" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="RefLegemiddelMerkevare" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="RefPakning" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="ForskrivningsenhetResept" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "id",
    "sortertVirkestoffMedStyrke",
    "sortertVirkestoffUtenStyrke",
    "refLegemiddelMerkevare",
    "refPakning",
    "forskrivningsenhetResept"
})
@XmlRootElement(name = "LegemiddelVirkestoff")
public class LegemiddelVirkestoff
    extends TypeLegemiddel
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Id", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlElement(name = "SortertVirkestoffMedStyrke")
    protected List<SortertVirkestoffMedStyrke> sortertVirkestoffMedStyrke;
    @XmlElement(name = "SortertVirkestoffUtenStyrke")
    protected List<SortertVirkestoffUtenStyrke> sortertVirkestoffUtenStyrke;
    @XmlElementRef(name = "RefLegemiddelMerkevare", namespace = "http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01", type = JAXBElement.class, required = false)
    protected List<JAXBElement<Object>> refLegemiddelMerkevare;
    @XmlElementRef(name = "RefPakning", namespace = "http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01", type = JAXBElement.class, required = false)
    protected List<JAXBElement<Object>> refPakning;
    @XmlElement(name = "ForskrivningsenhetResept")
    protected List<CV> forskrivningsenhetResept;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the sortertVirkestoffMedStyrke property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sortertVirkestoffMedStyrke property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSortertVirkestoffMedStyrke().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SortertVirkestoffMedStyrke }
     * 
     * 
     */
    public List<SortertVirkestoffMedStyrke> getSortertVirkestoffMedStyrke() {
        if (sortertVirkestoffMedStyrke == null) {
            sortertVirkestoffMedStyrke = new ArrayList<SortertVirkestoffMedStyrke>();
        }
        return this.sortertVirkestoffMedStyrke;
    }

    /**
     * Gets the value of the sortertVirkestoffUtenStyrke property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sortertVirkestoffUtenStyrke property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSortertVirkestoffUtenStyrke().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SortertVirkestoffUtenStyrke }
     * 
     * 
     */
    public List<SortertVirkestoffUtenStyrke> getSortertVirkestoffUtenStyrke() {
        if (sortertVirkestoffUtenStyrke == null) {
            sortertVirkestoffUtenStyrke = new ArrayList<SortertVirkestoffUtenStyrke>();
        }
        return this.sortertVirkestoffUtenStyrke;
    }

    /**
     * Gets the value of the refLegemiddelMerkevare property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the refLegemiddelMerkevare property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRefLegemiddelMerkevare().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<Object>> getRefLegemiddelMerkevare() {
        if (refLegemiddelMerkevare == null) {
            refLegemiddelMerkevare = new ArrayList<JAXBElement<Object>>();
        }
        return this.refLegemiddelMerkevare;
    }

    /**
     * Gets the value of the refPakning property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the refPakning property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRefPakning().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<Object>> getRefPakning() {
        if (refPakning == null) {
            refPakning = new ArrayList<JAXBElement<Object>>();
        }
        return this.refPakning;
    }

    /**
     * Gets the value of the forskrivningsenhetResept property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the forskrivningsenhetResept property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getForskrivningsenhetResept().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getForskrivningsenhetResept() {
        if (forskrivningsenhetResept == null) {
            forskrivningsenhetResept = new ArrayList<CV>();
        }
        return this.forskrivningsenhetResept;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            List<SortertVirkestoffMedStyrke> theSortertVirkestoffMedStyrke;
            theSortertVirkestoffMedStyrke = (((this.sortertVirkestoffMedStyrke!= null)&&(!this.sortertVirkestoffMedStyrke.isEmpty()))?this.getSortertVirkestoffMedStyrke():null);
            strategy.appendField(locator, this, "sortertVirkestoffMedStyrke", buffer, theSortertVirkestoffMedStyrke);
        }
        {
            List<SortertVirkestoffUtenStyrke> theSortertVirkestoffUtenStyrke;
            theSortertVirkestoffUtenStyrke = (((this.sortertVirkestoffUtenStyrke!= null)&&(!this.sortertVirkestoffUtenStyrke.isEmpty()))?this.getSortertVirkestoffUtenStyrke():null);
            strategy.appendField(locator, this, "sortertVirkestoffUtenStyrke", buffer, theSortertVirkestoffUtenStyrke);
        }
        {
            List<JAXBElement<Object>> theRefLegemiddelMerkevare;
            theRefLegemiddelMerkevare = (((this.refLegemiddelMerkevare!= null)&&(!this.refLegemiddelMerkevare.isEmpty()))?this.getRefLegemiddelMerkevare():null);
            strategy.appendField(locator, this, "refLegemiddelMerkevare", buffer, theRefLegemiddelMerkevare);
        }
        {
            List<JAXBElement<Object>> theRefPakning;
            theRefPakning = (((this.refPakning!= null)&&(!this.refPakning.isEmpty()))?this.getRefPakning():null);
            strategy.appendField(locator, this, "refPakning", buffer, theRefPakning);
        }
        {
            List<CV> theForskrivningsenhetResept;
            theForskrivningsenhetResept = (((this.forskrivningsenhetResept!= null)&&(!this.forskrivningsenhetResept.isEmpty()))?this.getForskrivningsenhetResept():null);
            strategy.appendField(locator, this, "forskrivningsenhetResept", buffer, theForskrivningsenhetResept);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof LegemiddelVirkestoff)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final LegemiddelVirkestoff that = ((LegemiddelVirkestoff) object);
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            List<SortertVirkestoffMedStyrke> lhsSortertVirkestoffMedStyrke;
            lhsSortertVirkestoffMedStyrke = (((this.sortertVirkestoffMedStyrke!= null)&&(!this.sortertVirkestoffMedStyrke.isEmpty()))?this.getSortertVirkestoffMedStyrke():null);
            List<SortertVirkestoffMedStyrke> rhsSortertVirkestoffMedStyrke;
            rhsSortertVirkestoffMedStyrke = (((that.sortertVirkestoffMedStyrke!= null)&&(!that.sortertVirkestoffMedStyrke.isEmpty()))?that.getSortertVirkestoffMedStyrke():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sortertVirkestoffMedStyrke", lhsSortertVirkestoffMedStyrke), LocatorUtils.property(thatLocator, "sortertVirkestoffMedStyrke", rhsSortertVirkestoffMedStyrke), lhsSortertVirkestoffMedStyrke, rhsSortertVirkestoffMedStyrke)) {
                return false;
            }
        }
        {
            List<SortertVirkestoffUtenStyrke> lhsSortertVirkestoffUtenStyrke;
            lhsSortertVirkestoffUtenStyrke = (((this.sortertVirkestoffUtenStyrke!= null)&&(!this.sortertVirkestoffUtenStyrke.isEmpty()))?this.getSortertVirkestoffUtenStyrke():null);
            List<SortertVirkestoffUtenStyrke> rhsSortertVirkestoffUtenStyrke;
            rhsSortertVirkestoffUtenStyrke = (((that.sortertVirkestoffUtenStyrke!= null)&&(!that.sortertVirkestoffUtenStyrke.isEmpty()))?that.getSortertVirkestoffUtenStyrke():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sortertVirkestoffUtenStyrke", lhsSortertVirkestoffUtenStyrke), LocatorUtils.property(thatLocator, "sortertVirkestoffUtenStyrke", rhsSortertVirkestoffUtenStyrke), lhsSortertVirkestoffUtenStyrke, rhsSortertVirkestoffUtenStyrke)) {
                return false;
            }
        }
        {
            List<JAXBElement<Object>> lhsRefLegemiddelMerkevare;
            lhsRefLegemiddelMerkevare = (((this.refLegemiddelMerkevare!= null)&&(!this.refLegemiddelMerkevare.isEmpty()))?this.getRefLegemiddelMerkevare():null);
            List<JAXBElement<Object>> rhsRefLegemiddelMerkevare;
            rhsRefLegemiddelMerkevare = (((that.refLegemiddelMerkevare!= null)&&(!that.refLegemiddelMerkevare.isEmpty()))?that.getRefLegemiddelMerkevare():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refLegemiddelMerkevare", lhsRefLegemiddelMerkevare), LocatorUtils.property(thatLocator, "refLegemiddelMerkevare", rhsRefLegemiddelMerkevare), lhsRefLegemiddelMerkevare, rhsRefLegemiddelMerkevare)) {
                return false;
            }
        }
        {
            List<JAXBElement<Object>> lhsRefPakning;
            lhsRefPakning = (((this.refPakning!= null)&&(!this.refPakning.isEmpty()))?this.getRefPakning():null);
            List<JAXBElement<Object>> rhsRefPakning;
            rhsRefPakning = (((that.refPakning!= null)&&(!that.refPakning.isEmpty()))?that.getRefPakning():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refPakning", lhsRefPakning), LocatorUtils.property(thatLocator, "refPakning", rhsRefPakning), lhsRefPakning, rhsRefPakning)) {
                return false;
            }
        }
        {
            List<CV> lhsForskrivningsenhetResept;
            lhsForskrivningsenhetResept = (((this.forskrivningsenhetResept!= null)&&(!this.forskrivningsenhetResept.isEmpty()))?this.getForskrivningsenhetResept():null);
            List<CV> rhsForskrivningsenhetResept;
            rhsForskrivningsenhetResept = (((that.forskrivningsenhetResept!= null)&&(!that.forskrivningsenhetResept.isEmpty()))?that.getForskrivningsenhetResept():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "forskrivningsenhetResept", lhsForskrivningsenhetResept), LocatorUtils.property(thatLocator, "forskrivningsenhetResept", rhsForskrivningsenhetResept), lhsForskrivningsenhetResept, rhsForskrivningsenhetResept)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            List<SortertVirkestoffMedStyrke> theSortertVirkestoffMedStyrke;
            theSortertVirkestoffMedStyrke = (((this.sortertVirkestoffMedStyrke!= null)&&(!this.sortertVirkestoffMedStyrke.isEmpty()))?this.getSortertVirkestoffMedStyrke():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sortertVirkestoffMedStyrke", theSortertVirkestoffMedStyrke), currentHashCode, theSortertVirkestoffMedStyrke);
        }
        {
            List<SortertVirkestoffUtenStyrke> theSortertVirkestoffUtenStyrke;
            theSortertVirkestoffUtenStyrke = (((this.sortertVirkestoffUtenStyrke!= null)&&(!this.sortertVirkestoffUtenStyrke.isEmpty()))?this.getSortertVirkestoffUtenStyrke():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sortertVirkestoffUtenStyrke", theSortertVirkestoffUtenStyrke), currentHashCode, theSortertVirkestoffUtenStyrke);
        }
        {
            List<JAXBElement<Object>> theRefLegemiddelMerkevare;
            theRefLegemiddelMerkevare = (((this.refLegemiddelMerkevare!= null)&&(!this.refLegemiddelMerkevare.isEmpty()))?this.getRefLegemiddelMerkevare():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refLegemiddelMerkevare", theRefLegemiddelMerkevare), currentHashCode, theRefLegemiddelMerkevare);
        }
        {
            List<JAXBElement<Object>> theRefPakning;
            theRefPakning = (((this.refPakning!= null)&&(!this.refPakning.isEmpty()))?this.getRefPakning():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refPakning", theRefPakning), currentHashCode, theRefPakning);
        }
        {
            List<CV> theForskrivningsenhetResept;
            theForskrivningsenhetResept = (((this.forskrivningsenhetResept!= null)&&(!this.forskrivningsenhetResept.isEmpty()))?this.getForskrivningsenhetResept():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "forskrivningsenhetResept", theForskrivningsenhetResept), currentHashCode, theForskrivningsenhetResept);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
