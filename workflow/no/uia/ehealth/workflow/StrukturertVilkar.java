//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Type" type="{http://www.kith.no/xmlstds}CV"/&gt;
 *         &lt;choice&gt;
 *           &lt;element name="VerdiTekst" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/&gt;
 *           &lt;element name="VerdiKodet" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "type",
    "verdiTekst",
    "verdiKodet"
})
@XmlRootElement(name = "StrukturertVilkar", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class StrukturertVilkar
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Type", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected CV type;
    @XmlElement(name = "VerdiTekst", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected List<String> verdiTekst;
    @XmlElement(name = "VerdiKodet", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected List<CV> verdiKodet;

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setType(CV value) {
        this.type = value;
    }

    /**
     * Gets the value of the verdiTekst property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the verdiTekst property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVerdiTekst().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getVerdiTekst() {
        if (verdiTekst == null) {
            verdiTekst = new ArrayList<String>();
        }
        return this.verdiTekst;
    }

    /**
     * Gets the value of the verdiKodet property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the verdiKodet property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVerdiKodet().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getVerdiKodet() {
        if (verdiKodet == null) {
            verdiKodet = new ArrayList<CV>();
        }
        return this.verdiKodet;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            CV theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            List<String> theVerdiTekst;
            theVerdiTekst = (((this.verdiTekst!= null)&&(!this.verdiTekst.isEmpty()))?this.getVerdiTekst():null);
            strategy.appendField(locator, this, "verdiTekst", buffer, theVerdiTekst);
        }
        {
            List<CV> theVerdiKodet;
            theVerdiKodet = (((this.verdiKodet!= null)&&(!this.verdiKodet.isEmpty()))?this.getVerdiKodet():null);
            strategy.appendField(locator, this, "verdiKodet", buffer, theVerdiKodet);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof StrukturertVilkar)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final StrukturertVilkar that = ((StrukturertVilkar) object);
        {
            CV lhsType;
            lhsType = this.getType();
            CV rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            List<String> lhsVerdiTekst;
            lhsVerdiTekst = (((this.verdiTekst!= null)&&(!this.verdiTekst.isEmpty()))?this.getVerdiTekst():null);
            List<String> rhsVerdiTekst;
            rhsVerdiTekst = (((that.verdiTekst!= null)&&(!that.verdiTekst.isEmpty()))?that.getVerdiTekst():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "verdiTekst", lhsVerdiTekst), LocatorUtils.property(thatLocator, "verdiTekst", rhsVerdiTekst), lhsVerdiTekst, rhsVerdiTekst)) {
                return false;
            }
        }
        {
            List<CV> lhsVerdiKodet;
            lhsVerdiKodet = (((this.verdiKodet!= null)&&(!this.verdiKodet.isEmpty()))?this.getVerdiKodet():null);
            List<CV> rhsVerdiKodet;
            rhsVerdiKodet = (((that.verdiKodet!= null)&&(!that.verdiKodet.isEmpty()))?that.getVerdiKodet():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "verdiKodet", lhsVerdiKodet), LocatorUtils.property(thatLocator, "verdiKodet", rhsVerdiKodet), lhsVerdiKodet, rhsVerdiKodet)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            CV theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            List<String> theVerdiTekst;
            theVerdiTekst = (((this.verdiTekst!= null)&&(!this.verdiTekst.isEmpty()))?this.getVerdiTekst():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "verdiTekst", theVerdiTekst), currentHashCode, theVerdiTekst);
        }
        {
            List<CV> theVerdiKodet;
            theVerdiKodet = (((this.verdiKodet!= null)&&(!this.verdiKodet.isEmpty()))?this.getVerdiKodet():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "verdiKodet", theVerdiKodet), currentHashCode, theVerdiKodet);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
