//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="OppfLegemiddeldose" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;extension base="{http://www.kith.no/xmlstds/eresept/m30/2014-12-01}typeEnkeltoppforingFest"&gt;
 *                 &lt;sequence minOccurs="0"&gt;
 *                   &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Legemiddeldose"/&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/extension&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "oppfLegemiddeldose"
})
@XmlRootElement(name = "KatLegemiddeldose", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class KatLegemiddeldose
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "OppfLegemiddeldose", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected List<KatLegemiddeldose.OppfLegemiddeldose> oppfLegemiddeldose;

    /**
     * Gets the value of the oppfLegemiddeldose property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the oppfLegemiddeldose property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOppfLegemiddeldose().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link KatLegemiddeldose.OppfLegemiddeldose }
     * 
     * 
     */
    public List<KatLegemiddeldose.OppfLegemiddeldose> getOppfLegemiddeldose() {
        if (oppfLegemiddeldose == null) {
            oppfLegemiddeldose = new ArrayList<KatLegemiddeldose.OppfLegemiddeldose>();
        }
        return this.oppfLegemiddeldose;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<KatLegemiddeldose.OppfLegemiddeldose> theOppfLegemiddeldose;
            theOppfLegemiddeldose = (((this.oppfLegemiddeldose!= null)&&(!this.oppfLegemiddeldose.isEmpty()))?this.getOppfLegemiddeldose():null);
            strategy.appendField(locator, this, "oppfLegemiddeldose", buffer, theOppfLegemiddeldose);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof KatLegemiddeldose)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final KatLegemiddeldose that = ((KatLegemiddeldose) object);
        {
            List<KatLegemiddeldose.OppfLegemiddeldose> lhsOppfLegemiddeldose;
            lhsOppfLegemiddeldose = (((this.oppfLegemiddeldose!= null)&&(!this.oppfLegemiddeldose.isEmpty()))?this.getOppfLegemiddeldose():null);
            List<KatLegemiddeldose.OppfLegemiddeldose> rhsOppfLegemiddeldose;
            rhsOppfLegemiddeldose = (((that.oppfLegemiddeldose!= null)&&(!that.oppfLegemiddeldose.isEmpty()))?that.getOppfLegemiddeldose():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oppfLegemiddeldose", lhsOppfLegemiddeldose), LocatorUtils.property(thatLocator, "oppfLegemiddeldose", rhsOppfLegemiddeldose), lhsOppfLegemiddeldose, rhsOppfLegemiddeldose)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<KatLegemiddeldose.OppfLegemiddeldose> theOppfLegemiddeldose;
            theOppfLegemiddeldose = (((this.oppfLegemiddeldose!= null)&&(!this.oppfLegemiddeldose.isEmpty()))?this.getOppfLegemiddeldose():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oppfLegemiddeldose", theOppfLegemiddeldose), currentHashCode, theOppfLegemiddeldose);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;extension base="{http://www.kith.no/xmlstds/eresept/m30/2014-12-01}typeEnkeltoppforingFest"&gt;
     *       &lt;sequence minOccurs="0"&gt;
     *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Legemiddeldose"/&gt;
     *       &lt;/sequence&gt;
     *     &lt;/extension&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "legemiddeldose"
    })
    public static class OppfLegemiddeldose
        extends TypeEnkeltoppforingFest
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "Legemiddeldose")
        protected Legemiddeldose legemiddeldose;

        /**
         * Gets the value of the legemiddeldose property.
         * 
         * @return
         *     possible object is
         *     {@link Legemiddeldose }
         *     
         */
        public Legemiddeldose getLegemiddeldose() {
            return legemiddeldose;
        }

        /**
         * Sets the value of the legemiddeldose property.
         * 
         * @param value
         *     allowed object is
         *     {@link Legemiddeldose }
         *     
         */
        public void setLegemiddeldose(Legemiddeldose value) {
            this.legemiddeldose = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                Legemiddeldose theLegemiddeldose;
                theLegemiddeldose = this.getLegemiddeldose();
                strategy.appendField(locator, this, "legemiddeldose", buffer, theLegemiddeldose);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof KatLegemiddeldose.OppfLegemiddeldose)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final KatLegemiddeldose.OppfLegemiddeldose that = ((KatLegemiddeldose.OppfLegemiddeldose) object);
            {
                Legemiddeldose lhsLegemiddeldose;
                lhsLegemiddeldose = this.getLegemiddeldose();
                Legemiddeldose rhsLegemiddeldose;
                rhsLegemiddeldose = that.getLegemiddeldose();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "legemiddeldose", lhsLegemiddeldose), LocatorUtils.property(thatLocator, "legemiddeldose", rhsLegemiddeldose), lhsLegemiddeldose, rhsLegemiddeldose)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                Legemiddeldose theLegemiddeldose;
                theLegemiddeldose = this.getLegemiddeldose();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legemiddeldose", theLegemiddeldose), currentHashCode, theLegemiddeldose);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
