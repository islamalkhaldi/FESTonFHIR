//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.Duration;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Lopenr" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="Mengde" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="Periode" type="{http://www.w3.org/2001/XMLSchema}duration"/&gt;
 *         &lt;element name="Iterasjoner" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Dosering" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "lopenr",
    "mengde",
    "periode",
    "iterasjoner",
    "dosering"
})
@XmlRootElement(name = "Legemiddelforbruk", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class Legemiddelforbruk
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Lopenr", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected int lopenr;
    @XmlElement(name = "Mengde", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected BigDecimal mengde;
    @XmlElement(name = "Periode", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected Duration periode;
    @XmlElement(name = "Iterasjoner", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected Integer iterasjoner;
    @XmlElement(name = "Dosering")
    protected Dosering dosering;

    /**
     * Gets the value of the lopenr property.
     * 
     */
    public int getLopenr() {
        return lopenr;
    }

    /**
     * Sets the value of the lopenr property.
     * 
     */
    public void setLopenr(int value) {
        this.lopenr = value;
    }

    /**
     * Gets the value of the mengde property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMengde() {
        return mengde;
    }

    /**
     * Sets the value of the mengde property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMengde(BigDecimal value) {
        this.mengde = value;
    }

    /**
     * Gets the value of the periode property.
     * 
     * @return
     *     possible object is
     *     {@link Duration }
     *     
     */
    public Duration getPeriode() {
        return periode;
    }

    /**
     * Sets the value of the periode property.
     * 
     * @param value
     *     allowed object is
     *     {@link Duration }
     *     
     */
    public void setPeriode(Duration value) {
        this.periode = value;
    }

    /**
     * Gets the value of the iterasjoner property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getIterasjoner() {
        return iterasjoner;
    }

    /**
     * Sets the value of the iterasjoner property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setIterasjoner(Integer value) {
        this.iterasjoner = value;
    }

    /**
     * Gets the value of the dosering property.
     * 
     * @return
     *     possible object is
     *     {@link Dosering }
     *     
     */
    public Dosering getDosering() {
        return dosering;
    }

    /**
     * Sets the value of the dosering property.
     * 
     * @param value
     *     allowed object is
     *     {@link Dosering }
     *     
     */
    public void setDosering(Dosering value) {
        this.dosering = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theLopenr;
            theLopenr = this.getLopenr();
            strategy.appendField(locator, this, "lopenr", buffer, theLopenr);
        }
        {
            BigDecimal theMengde;
            theMengde = this.getMengde();
            strategy.appendField(locator, this, "mengde", buffer, theMengde);
        }
        {
            Duration thePeriode;
            thePeriode = this.getPeriode();
            strategy.appendField(locator, this, "periode", buffer, thePeriode);
        }
        {
            Integer theIterasjoner;
            theIterasjoner = this.getIterasjoner();
            strategy.appendField(locator, this, "iterasjoner", buffer, theIterasjoner);
        }
        {
            Dosering theDosering;
            theDosering = this.getDosering();
            strategy.appendField(locator, this, "dosering", buffer, theDosering);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Legemiddelforbruk)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Legemiddelforbruk that = ((Legemiddelforbruk) object);
        {
            int lhsLopenr;
            lhsLopenr = this.getLopenr();
            int rhsLopenr;
            rhsLopenr = that.getLopenr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lopenr", lhsLopenr), LocatorUtils.property(thatLocator, "lopenr", rhsLopenr), lhsLopenr, rhsLopenr)) {
                return false;
            }
        }
        {
            BigDecimal lhsMengde;
            lhsMengde = this.getMengde();
            BigDecimal rhsMengde;
            rhsMengde = that.getMengde();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mengde", lhsMengde), LocatorUtils.property(thatLocator, "mengde", rhsMengde), lhsMengde, rhsMengde)) {
                return false;
            }
        }
        {
            Duration lhsPeriode;
            lhsPeriode = this.getPeriode();
            Duration rhsPeriode;
            rhsPeriode = that.getPeriode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "periode", lhsPeriode), LocatorUtils.property(thatLocator, "periode", rhsPeriode), lhsPeriode, rhsPeriode)) {
                return false;
            }
        }
        {
            Integer lhsIterasjoner;
            lhsIterasjoner = this.getIterasjoner();
            Integer rhsIterasjoner;
            rhsIterasjoner = that.getIterasjoner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iterasjoner", lhsIterasjoner), LocatorUtils.property(thatLocator, "iterasjoner", rhsIterasjoner), lhsIterasjoner, rhsIterasjoner)) {
                return false;
            }
        }
        {
            Dosering lhsDosering;
            lhsDosering = this.getDosering();
            Dosering rhsDosering;
            rhsDosering = that.getDosering();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dosering", lhsDosering), LocatorUtils.property(thatLocator, "dosering", rhsDosering), lhsDosering, rhsDosering)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theLopenr;
            theLopenr = this.getLopenr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lopenr", theLopenr), currentHashCode, theLopenr);
        }
        {
            BigDecimal theMengde;
            theMengde = this.getMengde();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mengde", theMengde), currentHashCode, theMengde);
        }
        {
            Duration thePeriode;
            thePeriode = this.getPeriode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "periode", thePeriode), currentHashCode, thePeriode);
        }
        {
            Integer theIterasjoner;
            theIterasjoner = this.getIterasjoner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iterasjoner", theIterasjoner), currentHashCode, theIterasjoner);
        }
        {
            Dosering theDosering;
            theDosering = this.getDosering();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dosering", theDosering), currentHashCode, theDosering);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
