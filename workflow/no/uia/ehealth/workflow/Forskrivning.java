//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Bruksomrade" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="DosVeiledEnkel" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="IngenKombinasjon" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="Bruk" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element name="Kortdose" type="{http://www.kith.no/xmlstds}CV" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}AdministreringForskrivning" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Dosering" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}LegemiddelMerkevare"/&gt;
 *           &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Legemiddelpakning"/&gt;
 *           &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}LegemiddelVirkestoff"/&gt;
 *           &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Legemiddelblanding"/&gt;
 *           &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Legemiddeldose"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "bruksomrade",
    "dosVeiledEnkel",
    "ingenKombinasjon",
    "bruk",
    "kortdose",
    "administreringForskrivning",
    "dosering",
    "legemiddelMerkevare",
    "legemiddelpakning",
    "legemiddelVirkestoff",
    "legemiddelblanding",
    "legemiddeldose"
})
@XmlRootElement(name = "Forskrivning")
public class Forskrivning
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Bruksomrade")
    protected String bruksomrade;
    @XmlElement(name = "DosVeiledEnkel")
    protected String dosVeiledEnkel;
    @XmlElement(name = "IngenKombinasjon")
    protected Boolean ingenKombinasjon;
    @XmlElement(name = "Bruk")
    protected CS bruk;
    @XmlElement(name = "Kortdose")
    protected CV kortdose;
    @XmlElement(name = "AdministreringForskrivning")
    protected AdministreringForskrivning administreringForskrivning;
    @XmlElement(name = "Dosering")
    protected List<Dosering> dosering;
    @XmlElement(name = "LegemiddelMerkevare")
    protected LegemiddelMerkevare legemiddelMerkevare;
    @XmlElement(name = "Legemiddelpakning")
    protected Legemiddelpakning legemiddelpakning;
    @XmlElement(name = "LegemiddelVirkestoff")
    protected LegemiddelVirkestoff legemiddelVirkestoff;
    @XmlElement(name = "Legemiddelblanding")
    protected Legemiddelblanding legemiddelblanding;
    @XmlElement(name = "Legemiddeldose")
    protected Legemiddeldose legemiddeldose;

    /**
     * Gets the value of the bruksomrade property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBruksomrade() {
        return bruksomrade;
    }

    /**
     * Sets the value of the bruksomrade property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBruksomrade(String value) {
        this.bruksomrade = value;
    }

    /**
     * Gets the value of the dosVeiledEnkel property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDosVeiledEnkel() {
        return dosVeiledEnkel;
    }

    /**
     * Sets the value of the dosVeiledEnkel property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDosVeiledEnkel(String value) {
        this.dosVeiledEnkel = value;
    }

    /**
     * Gets the value of the ingenKombinasjon property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getIngenKombinasjon() {
        return ingenKombinasjon;
    }

    /**
     * Sets the value of the ingenKombinasjon property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIngenKombinasjon(Boolean value) {
        this.ingenKombinasjon = value;
    }

    /**
     * Gets the value of the bruk property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getBruk() {
        return bruk;
    }

    /**
     * Sets the value of the bruk property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setBruk(CS value) {
        this.bruk = value;
    }

    /**
     * Gets the value of the kortdose property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getKortdose() {
        return kortdose;
    }

    /**
     * Sets the value of the kortdose property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setKortdose(CV value) {
        this.kortdose = value;
    }

    /**
     * Gets the value of the administreringForskrivning property.
     * 
     * @return
     *     possible object is
     *     {@link AdministreringForskrivning }
     *     
     */
    public AdministreringForskrivning getAdministreringForskrivning() {
        return administreringForskrivning;
    }

    /**
     * Sets the value of the administreringForskrivning property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdministreringForskrivning }
     *     
     */
    public void setAdministreringForskrivning(AdministreringForskrivning value) {
        this.administreringForskrivning = value;
    }

    /**
     * Gets the value of the dosering property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dosering property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDosering().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Dosering }
     * 
     * 
     */
    public List<Dosering> getDosering() {
        if (dosering == null) {
            dosering = new ArrayList<Dosering>();
        }
        return this.dosering;
    }

    /**
     * Gets the value of the legemiddelMerkevare property.
     * 
     * @return
     *     possible object is
     *     {@link LegemiddelMerkevare }
     *     
     */
    public LegemiddelMerkevare getLegemiddelMerkevare() {
        return legemiddelMerkevare;
    }

    /**
     * Sets the value of the legemiddelMerkevare property.
     * 
     * @param value
     *     allowed object is
     *     {@link LegemiddelMerkevare }
     *     
     */
    public void setLegemiddelMerkevare(LegemiddelMerkevare value) {
        this.legemiddelMerkevare = value;
    }

    /**
     * Gets the value of the legemiddelpakning property.
     * 
     * @return
     *     possible object is
     *     {@link Legemiddelpakning }
     *     
     */
    public Legemiddelpakning getLegemiddelpakning() {
        return legemiddelpakning;
    }

    /**
     * Sets the value of the legemiddelpakning property.
     * 
     * @param value
     *     allowed object is
     *     {@link Legemiddelpakning }
     *     
     */
    public void setLegemiddelpakning(Legemiddelpakning value) {
        this.legemiddelpakning = value;
    }

    /**
     * Gets the value of the legemiddelVirkestoff property.
     * 
     * @return
     *     possible object is
     *     {@link LegemiddelVirkestoff }
     *     
     */
    public LegemiddelVirkestoff getLegemiddelVirkestoff() {
        return legemiddelVirkestoff;
    }

    /**
     * Sets the value of the legemiddelVirkestoff property.
     * 
     * @param value
     *     allowed object is
     *     {@link LegemiddelVirkestoff }
     *     
     */
    public void setLegemiddelVirkestoff(LegemiddelVirkestoff value) {
        this.legemiddelVirkestoff = value;
    }

    /**
     * Gets the value of the legemiddelblanding property.
     * 
     * @return
     *     possible object is
     *     {@link Legemiddelblanding }
     *     
     */
    public Legemiddelblanding getLegemiddelblanding() {
        return legemiddelblanding;
    }

    /**
     * Sets the value of the legemiddelblanding property.
     * 
     * @param value
     *     allowed object is
     *     {@link Legemiddelblanding }
     *     
     */
    public void setLegemiddelblanding(Legemiddelblanding value) {
        this.legemiddelblanding = value;
    }

    /**
     * Gets the value of the legemiddeldose property.
     * 
     * @return
     *     possible object is
     *     {@link Legemiddeldose }
     *     
     */
    public Legemiddeldose getLegemiddeldose() {
        return legemiddeldose;
    }

    /**
     * Sets the value of the legemiddeldose property.
     * 
     * @param value
     *     allowed object is
     *     {@link Legemiddeldose }
     *     
     */
    public void setLegemiddeldose(Legemiddeldose value) {
        this.legemiddeldose = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theBruksomrade;
            theBruksomrade = this.getBruksomrade();
            strategy.appendField(locator, this, "bruksomrade", buffer, theBruksomrade);
        }
        {
            String theDosVeiledEnkel;
            theDosVeiledEnkel = this.getDosVeiledEnkel();
            strategy.appendField(locator, this, "dosVeiledEnkel", buffer, theDosVeiledEnkel);
        }
        {
            Boolean theIngenKombinasjon;
            theIngenKombinasjon = this.getIngenKombinasjon();
            strategy.appendField(locator, this, "ingenKombinasjon", buffer, theIngenKombinasjon);
        }
        {
            CS theBruk;
            theBruk = this.getBruk();
            strategy.appendField(locator, this, "bruk", buffer, theBruk);
        }
        {
            CV theKortdose;
            theKortdose = this.getKortdose();
            strategy.appendField(locator, this, "kortdose", buffer, theKortdose);
        }
        {
            AdministreringForskrivning theAdministreringForskrivning;
            theAdministreringForskrivning = this.getAdministreringForskrivning();
            strategy.appendField(locator, this, "administreringForskrivning", buffer, theAdministreringForskrivning);
        }
        {
            List<Dosering> theDosering;
            theDosering = (((this.dosering!= null)&&(!this.dosering.isEmpty()))?this.getDosering():null);
            strategy.appendField(locator, this, "dosering", buffer, theDosering);
        }
        {
            LegemiddelMerkevare theLegemiddelMerkevare;
            theLegemiddelMerkevare = this.getLegemiddelMerkevare();
            strategy.appendField(locator, this, "legemiddelMerkevare", buffer, theLegemiddelMerkevare);
        }
        {
            Legemiddelpakning theLegemiddelpakning;
            theLegemiddelpakning = this.getLegemiddelpakning();
            strategy.appendField(locator, this, "legemiddelpakning", buffer, theLegemiddelpakning);
        }
        {
            LegemiddelVirkestoff theLegemiddelVirkestoff;
            theLegemiddelVirkestoff = this.getLegemiddelVirkestoff();
            strategy.appendField(locator, this, "legemiddelVirkestoff", buffer, theLegemiddelVirkestoff);
        }
        {
            Legemiddelblanding theLegemiddelblanding;
            theLegemiddelblanding = this.getLegemiddelblanding();
            strategy.appendField(locator, this, "legemiddelblanding", buffer, theLegemiddelblanding);
        }
        {
            Legemiddeldose theLegemiddeldose;
            theLegemiddeldose = this.getLegemiddeldose();
            strategy.appendField(locator, this, "legemiddeldose", buffer, theLegemiddeldose);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Forskrivning)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Forskrivning that = ((Forskrivning) object);
        {
            String lhsBruksomrade;
            lhsBruksomrade = this.getBruksomrade();
            String rhsBruksomrade;
            rhsBruksomrade = that.getBruksomrade();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bruksomrade", lhsBruksomrade), LocatorUtils.property(thatLocator, "bruksomrade", rhsBruksomrade), lhsBruksomrade, rhsBruksomrade)) {
                return false;
            }
        }
        {
            String lhsDosVeiledEnkel;
            lhsDosVeiledEnkel = this.getDosVeiledEnkel();
            String rhsDosVeiledEnkel;
            rhsDosVeiledEnkel = that.getDosVeiledEnkel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dosVeiledEnkel", lhsDosVeiledEnkel), LocatorUtils.property(thatLocator, "dosVeiledEnkel", rhsDosVeiledEnkel), lhsDosVeiledEnkel, rhsDosVeiledEnkel)) {
                return false;
            }
        }
        {
            Boolean lhsIngenKombinasjon;
            lhsIngenKombinasjon = this.getIngenKombinasjon();
            Boolean rhsIngenKombinasjon;
            rhsIngenKombinasjon = that.getIngenKombinasjon();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ingenKombinasjon", lhsIngenKombinasjon), LocatorUtils.property(thatLocator, "ingenKombinasjon", rhsIngenKombinasjon), lhsIngenKombinasjon, rhsIngenKombinasjon)) {
                return false;
            }
        }
        {
            CS lhsBruk;
            lhsBruk = this.getBruk();
            CS rhsBruk;
            rhsBruk = that.getBruk();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bruk", lhsBruk), LocatorUtils.property(thatLocator, "bruk", rhsBruk), lhsBruk, rhsBruk)) {
                return false;
            }
        }
        {
            CV lhsKortdose;
            lhsKortdose = this.getKortdose();
            CV rhsKortdose;
            rhsKortdose = that.getKortdose();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "kortdose", lhsKortdose), LocatorUtils.property(thatLocator, "kortdose", rhsKortdose), lhsKortdose, rhsKortdose)) {
                return false;
            }
        }
        {
            AdministreringForskrivning lhsAdministreringForskrivning;
            lhsAdministreringForskrivning = this.getAdministreringForskrivning();
            AdministreringForskrivning rhsAdministreringForskrivning;
            rhsAdministreringForskrivning = that.getAdministreringForskrivning();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "administreringForskrivning", lhsAdministreringForskrivning), LocatorUtils.property(thatLocator, "administreringForskrivning", rhsAdministreringForskrivning), lhsAdministreringForskrivning, rhsAdministreringForskrivning)) {
                return false;
            }
        }
        {
            List<Dosering> lhsDosering;
            lhsDosering = (((this.dosering!= null)&&(!this.dosering.isEmpty()))?this.getDosering():null);
            List<Dosering> rhsDosering;
            rhsDosering = (((that.dosering!= null)&&(!that.dosering.isEmpty()))?that.getDosering():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dosering", lhsDosering), LocatorUtils.property(thatLocator, "dosering", rhsDosering), lhsDosering, rhsDosering)) {
                return false;
            }
        }
        {
            LegemiddelMerkevare lhsLegemiddelMerkevare;
            lhsLegemiddelMerkevare = this.getLegemiddelMerkevare();
            LegemiddelMerkevare rhsLegemiddelMerkevare;
            rhsLegemiddelMerkevare = that.getLegemiddelMerkevare();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legemiddelMerkevare", lhsLegemiddelMerkevare), LocatorUtils.property(thatLocator, "legemiddelMerkevare", rhsLegemiddelMerkevare), lhsLegemiddelMerkevare, rhsLegemiddelMerkevare)) {
                return false;
            }
        }
        {
            Legemiddelpakning lhsLegemiddelpakning;
            lhsLegemiddelpakning = this.getLegemiddelpakning();
            Legemiddelpakning rhsLegemiddelpakning;
            rhsLegemiddelpakning = that.getLegemiddelpakning();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legemiddelpakning", lhsLegemiddelpakning), LocatorUtils.property(thatLocator, "legemiddelpakning", rhsLegemiddelpakning), lhsLegemiddelpakning, rhsLegemiddelpakning)) {
                return false;
            }
        }
        {
            LegemiddelVirkestoff lhsLegemiddelVirkestoff;
            lhsLegemiddelVirkestoff = this.getLegemiddelVirkestoff();
            LegemiddelVirkestoff rhsLegemiddelVirkestoff;
            rhsLegemiddelVirkestoff = that.getLegemiddelVirkestoff();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legemiddelVirkestoff", lhsLegemiddelVirkestoff), LocatorUtils.property(thatLocator, "legemiddelVirkestoff", rhsLegemiddelVirkestoff), lhsLegemiddelVirkestoff, rhsLegemiddelVirkestoff)) {
                return false;
            }
        }
        {
            Legemiddelblanding lhsLegemiddelblanding;
            lhsLegemiddelblanding = this.getLegemiddelblanding();
            Legemiddelblanding rhsLegemiddelblanding;
            rhsLegemiddelblanding = that.getLegemiddelblanding();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legemiddelblanding", lhsLegemiddelblanding), LocatorUtils.property(thatLocator, "legemiddelblanding", rhsLegemiddelblanding), lhsLegemiddelblanding, rhsLegemiddelblanding)) {
                return false;
            }
        }
        {
            Legemiddeldose lhsLegemiddeldose;
            lhsLegemiddeldose = this.getLegemiddeldose();
            Legemiddeldose rhsLegemiddeldose;
            rhsLegemiddeldose = that.getLegemiddeldose();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legemiddeldose", lhsLegemiddeldose), LocatorUtils.property(thatLocator, "legemiddeldose", rhsLegemiddeldose), lhsLegemiddeldose, rhsLegemiddeldose)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theBruksomrade;
            theBruksomrade = this.getBruksomrade();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bruksomrade", theBruksomrade), currentHashCode, theBruksomrade);
        }
        {
            String theDosVeiledEnkel;
            theDosVeiledEnkel = this.getDosVeiledEnkel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dosVeiledEnkel", theDosVeiledEnkel), currentHashCode, theDosVeiledEnkel);
        }
        {
            Boolean theIngenKombinasjon;
            theIngenKombinasjon = this.getIngenKombinasjon();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ingenKombinasjon", theIngenKombinasjon), currentHashCode, theIngenKombinasjon);
        }
        {
            CS theBruk;
            theBruk = this.getBruk();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bruk", theBruk), currentHashCode, theBruk);
        }
        {
            CV theKortdose;
            theKortdose = this.getKortdose();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "kortdose", theKortdose), currentHashCode, theKortdose);
        }
        {
            AdministreringForskrivning theAdministreringForskrivning;
            theAdministreringForskrivning = this.getAdministreringForskrivning();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "administreringForskrivning", theAdministreringForskrivning), currentHashCode, theAdministreringForskrivning);
        }
        {
            List<Dosering> theDosering;
            theDosering = (((this.dosering!= null)&&(!this.dosering.isEmpty()))?this.getDosering():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dosering", theDosering), currentHashCode, theDosering);
        }
        {
            LegemiddelMerkevare theLegemiddelMerkevare;
            theLegemiddelMerkevare = this.getLegemiddelMerkevare();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legemiddelMerkevare", theLegemiddelMerkevare), currentHashCode, theLegemiddelMerkevare);
        }
        {
            Legemiddelpakning theLegemiddelpakning;
            theLegemiddelpakning = this.getLegemiddelpakning();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legemiddelpakning", theLegemiddelpakning), currentHashCode, theLegemiddelpakning);
        }
        {
            LegemiddelVirkestoff theLegemiddelVirkestoff;
            theLegemiddelVirkestoff = this.getLegemiddelVirkestoff();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legemiddelVirkestoff", theLegemiddelVirkestoff), currentHashCode, theLegemiddelVirkestoff);
        }
        {
            Legemiddelblanding theLegemiddelblanding;
            theLegemiddelblanding = this.getLegemiddelblanding();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legemiddelblanding", theLegemiddelblanding), currentHashCode, theLegemiddelblanding);
        }
        {
            Legemiddeldose theLegemiddeldose;
            theLegemiddeldose = this.getLegemiddeldose();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legemiddeldose", theLegemiddeldose), currentHashCode, theLegemiddeldose);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
