//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="OppfVirkestoff" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;extension base="{http://www.kith.no/xmlstds/eresept/m30/2014-12-01}typeEnkeltoppforingFest"&gt;
 *                 &lt;choice minOccurs="0"&gt;
 *                   &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Virkestoff"/&gt;
 *                   &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}VirkestoffMedStyrke"/&gt;
 *                 &lt;/choice&gt;
 *               &lt;/extension&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "oppfVirkestoff"
})
@XmlRootElement(name = "KatVirkestoff", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class KatVirkestoff
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "OppfVirkestoff", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected List<KatVirkestoff.OppfVirkestoff> oppfVirkestoff;

    /**
     * Gets the value of the oppfVirkestoff property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the oppfVirkestoff property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOppfVirkestoff().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link KatVirkestoff.OppfVirkestoff }
     * 
     * 
     */
    public List<KatVirkestoff.OppfVirkestoff> getOppfVirkestoff() {
        if (oppfVirkestoff == null) {
            oppfVirkestoff = new ArrayList<KatVirkestoff.OppfVirkestoff>();
        }
        return this.oppfVirkestoff;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<KatVirkestoff.OppfVirkestoff> theOppfVirkestoff;
            theOppfVirkestoff = (((this.oppfVirkestoff!= null)&&(!this.oppfVirkestoff.isEmpty()))?this.getOppfVirkestoff():null);
            strategy.appendField(locator, this, "oppfVirkestoff", buffer, theOppfVirkestoff);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof KatVirkestoff)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final KatVirkestoff that = ((KatVirkestoff) object);
        {
            List<KatVirkestoff.OppfVirkestoff> lhsOppfVirkestoff;
            lhsOppfVirkestoff = (((this.oppfVirkestoff!= null)&&(!this.oppfVirkestoff.isEmpty()))?this.getOppfVirkestoff():null);
            List<KatVirkestoff.OppfVirkestoff> rhsOppfVirkestoff;
            rhsOppfVirkestoff = (((that.oppfVirkestoff!= null)&&(!that.oppfVirkestoff.isEmpty()))?that.getOppfVirkestoff():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oppfVirkestoff", lhsOppfVirkestoff), LocatorUtils.property(thatLocator, "oppfVirkestoff", rhsOppfVirkestoff), lhsOppfVirkestoff, rhsOppfVirkestoff)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<KatVirkestoff.OppfVirkestoff> theOppfVirkestoff;
            theOppfVirkestoff = (((this.oppfVirkestoff!= null)&&(!this.oppfVirkestoff.isEmpty()))?this.getOppfVirkestoff():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oppfVirkestoff", theOppfVirkestoff), currentHashCode, theOppfVirkestoff);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;extension base="{http://www.kith.no/xmlstds/eresept/m30/2014-12-01}typeEnkeltoppforingFest"&gt;
     *       &lt;choice minOccurs="0"&gt;
     *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Virkestoff"/&gt;
     *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}VirkestoffMedStyrke"/&gt;
     *       &lt;/choice&gt;
     *     &lt;/extension&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "virkestoff",
        "virkestoffMedStyrke"
    })
    public static class OppfVirkestoff
        extends TypeEnkeltoppforingFest
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "Virkestoff")
        protected Virkestoff virkestoff;
        @XmlElement(name = "VirkestoffMedStyrke")
        protected VirkestoffMedStyrke virkestoffMedStyrke;

        /**
         * Gets the value of the virkestoff property.
         * 
         * @return
         *     possible object is
         *     {@link Virkestoff }
         *     
         */
        public Virkestoff getVirkestoff() {
            return virkestoff;
        }

        /**
         * Sets the value of the virkestoff property.
         * 
         * @param value
         *     allowed object is
         *     {@link Virkestoff }
         *     
         */
        public void setVirkestoff(Virkestoff value) {
            this.virkestoff = value;
        }

        /**
         * Gets the value of the virkestoffMedStyrke property.
         * 
         * @return
         *     possible object is
         *     {@link VirkestoffMedStyrke }
         *     
         */
        public VirkestoffMedStyrke getVirkestoffMedStyrke() {
            return virkestoffMedStyrke;
        }

        /**
         * Sets the value of the virkestoffMedStyrke property.
         * 
         * @param value
         *     allowed object is
         *     {@link VirkestoffMedStyrke }
         *     
         */
        public void setVirkestoffMedStyrke(VirkestoffMedStyrke value) {
            this.virkestoffMedStyrke = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                Virkestoff theVirkestoff;
                theVirkestoff = this.getVirkestoff();
                strategy.appendField(locator, this, "virkestoff", buffer, theVirkestoff);
            }
            {
                VirkestoffMedStyrke theVirkestoffMedStyrke;
                theVirkestoffMedStyrke = this.getVirkestoffMedStyrke();
                strategy.appendField(locator, this, "virkestoffMedStyrke", buffer, theVirkestoffMedStyrke);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof KatVirkestoff.OppfVirkestoff)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final KatVirkestoff.OppfVirkestoff that = ((KatVirkestoff.OppfVirkestoff) object);
            {
                Virkestoff lhsVirkestoff;
                lhsVirkestoff = this.getVirkestoff();
                Virkestoff rhsVirkestoff;
                rhsVirkestoff = that.getVirkestoff();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "virkestoff", lhsVirkestoff), LocatorUtils.property(thatLocator, "virkestoff", rhsVirkestoff), lhsVirkestoff, rhsVirkestoff)) {
                    return false;
                }
            }
            {
                VirkestoffMedStyrke lhsVirkestoffMedStyrke;
                lhsVirkestoffMedStyrke = this.getVirkestoffMedStyrke();
                VirkestoffMedStyrke rhsVirkestoffMedStyrke;
                rhsVirkestoffMedStyrke = that.getVirkestoffMedStyrke();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "virkestoffMedStyrke", lhsVirkestoffMedStyrke), LocatorUtils.property(thatLocator, "virkestoffMedStyrke", rhsVirkestoffMedStyrke), lhsVirkestoffMedStyrke, rhsVirkestoffMedStyrke)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                Virkestoff theVirkestoff;
                theVirkestoff = this.getVirkestoff();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "virkestoff", theVirkestoff), currentHashCode, theVirkestoff);
            }
            {
                VirkestoffMedStyrke theVirkestoffMedStyrke;
                theVirkestoffMedStyrke = this.getVirkestoffMedStyrke();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "virkestoffMedStyrke", theVirkestoffMedStyrke), currentHashCode, theVirkestoffMedStyrke);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
