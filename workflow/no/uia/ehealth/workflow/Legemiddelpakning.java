//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}typeLegemiddel"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Id" type="{http://www.w3.org/2001/XMLSchema}ID" minOccurs="0"/&gt;
 *         &lt;element name="Varenr" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="Ean" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="IkkeKonservering" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="Oppbevaring" type="{http://www.kith.no/xmlstds}CS" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Pakningsinfo" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}PakningsinfoResept" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}PrisVare" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Markedsforingsinfo" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Preparatomtaleavsnitt" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "id",
    "varenr",
    "ean",
    "ikkeKonservering",
    "oppbevaring",
    "pakningsinfo",
    "pakningsinfoResept",
    "prisVare",
    "markedsforingsinfo",
    "preparatomtaleavsnitt"
})
@XmlRootElement(name = "Legemiddelpakning")
public class Legemiddelpakning
    extends TypeLegemiddel
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlElement(name = "Varenr", required = true)
    protected String varenr;
    @XmlElement(name = "Ean")
    protected List<String> ean;
    @XmlElement(name = "IkkeKonservering")
    protected Boolean ikkeKonservering;
    @XmlElement(name = "Oppbevaring")
    protected CS oppbevaring;
    @XmlElement(name = "Pakningsinfo")
    protected List<Pakningsinfo> pakningsinfo;
    @XmlElement(name = "PakningsinfoResept")
    protected List<PakningsinfoResept> pakningsinfoResept;
    @XmlElement(name = "PrisVare")
    protected List<PrisVare> prisVare;
    @XmlElement(name = "Markedsforingsinfo")
    protected Markedsforingsinfo markedsforingsinfo;
    @XmlElement(name = "Preparatomtaleavsnitt")
    protected List<Preparatomtaleavsnitt> preparatomtaleavsnitt;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the varenr property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVarenr() {
        return varenr;
    }

    /**
     * Sets the value of the varenr property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVarenr(String value) {
        this.varenr = value;
    }

    /**
     * Gets the value of the ean property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ean property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEan().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getEan() {
        if (ean == null) {
            ean = new ArrayList<String>();
        }
        return this.ean;
    }

    /**
     * Gets the value of the ikkeKonservering property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getIkkeKonservering() {
        return ikkeKonservering;
    }

    /**
     * Sets the value of the ikkeKonservering property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIkkeKonservering(Boolean value) {
        this.ikkeKonservering = value;
    }

    /**
     * Gets the value of the oppbevaring property.
     * 
     * @return
     *     possible object is
     *     {@link CS }
     *     
     */
    public CS getOppbevaring() {
        return oppbevaring;
    }

    /**
     * Sets the value of the oppbevaring property.
     * 
     * @param value
     *     allowed object is
     *     {@link CS }
     *     
     */
    public void setOppbevaring(CS value) {
        this.oppbevaring = value;
    }

    /**
     * Gets the value of the pakningsinfo property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the pakningsinfo property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPakningsinfo().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Pakningsinfo }
     * 
     * 
     */
    public List<Pakningsinfo> getPakningsinfo() {
        if (pakningsinfo == null) {
            pakningsinfo = new ArrayList<Pakningsinfo>();
        }
        return this.pakningsinfo;
    }

    /**
     * Gets the value of the pakningsinfoResept property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the pakningsinfoResept property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPakningsinfoResept().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PakningsinfoResept }
     * 
     * 
     */
    public List<PakningsinfoResept> getPakningsinfoResept() {
        if (pakningsinfoResept == null) {
            pakningsinfoResept = new ArrayList<PakningsinfoResept>();
        }
        return this.pakningsinfoResept;
    }

    /**
     * Gets the value of the prisVare property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the prisVare property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPrisVare().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PrisVare }
     * 
     * 
     */
    public List<PrisVare> getPrisVare() {
        if (prisVare == null) {
            prisVare = new ArrayList<PrisVare>();
        }
        return this.prisVare;
    }

    /**
     * Gets the value of the markedsforingsinfo property.
     * 
     * @return
     *     possible object is
     *     {@link Markedsforingsinfo }
     *     
     */
    public Markedsforingsinfo getMarkedsforingsinfo() {
        return markedsforingsinfo;
    }

    /**
     * Sets the value of the markedsforingsinfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link Markedsforingsinfo }
     *     
     */
    public void setMarkedsforingsinfo(Markedsforingsinfo value) {
        this.markedsforingsinfo = value;
    }

    /**
     * Gets the value of the preparatomtaleavsnitt property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the preparatomtaleavsnitt property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPreparatomtaleavsnitt().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Preparatomtaleavsnitt }
     * 
     * 
     */
    public List<Preparatomtaleavsnitt> getPreparatomtaleavsnitt() {
        if (preparatomtaleavsnitt == null) {
            preparatomtaleavsnitt = new ArrayList<Preparatomtaleavsnitt>();
        }
        return this.preparatomtaleavsnitt;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            String theVarenr;
            theVarenr = this.getVarenr();
            strategy.appendField(locator, this, "varenr", buffer, theVarenr);
        }
        {
            List<String> theEan;
            theEan = (((this.ean!= null)&&(!this.ean.isEmpty()))?this.getEan():null);
            strategy.appendField(locator, this, "ean", buffer, theEan);
        }
        {
            Boolean theIkkeKonservering;
            theIkkeKonservering = this.getIkkeKonservering();
            strategy.appendField(locator, this, "ikkeKonservering", buffer, theIkkeKonservering);
        }
        {
            CS theOppbevaring;
            theOppbevaring = this.getOppbevaring();
            strategy.appendField(locator, this, "oppbevaring", buffer, theOppbevaring);
        }
        {
            List<Pakningsinfo> thePakningsinfo;
            thePakningsinfo = (((this.pakningsinfo!= null)&&(!this.pakningsinfo.isEmpty()))?this.getPakningsinfo():null);
            strategy.appendField(locator, this, "pakningsinfo", buffer, thePakningsinfo);
        }
        {
            List<PakningsinfoResept> thePakningsinfoResept;
            thePakningsinfoResept = (((this.pakningsinfoResept!= null)&&(!this.pakningsinfoResept.isEmpty()))?this.getPakningsinfoResept():null);
            strategy.appendField(locator, this, "pakningsinfoResept", buffer, thePakningsinfoResept);
        }
        {
            List<PrisVare> thePrisVare;
            thePrisVare = (((this.prisVare!= null)&&(!this.prisVare.isEmpty()))?this.getPrisVare():null);
            strategy.appendField(locator, this, "prisVare", buffer, thePrisVare);
        }
        {
            Markedsforingsinfo theMarkedsforingsinfo;
            theMarkedsforingsinfo = this.getMarkedsforingsinfo();
            strategy.appendField(locator, this, "markedsforingsinfo", buffer, theMarkedsforingsinfo);
        }
        {
            List<Preparatomtaleavsnitt> thePreparatomtaleavsnitt;
            thePreparatomtaleavsnitt = (((this.preparatomtaleavsnitt!= null)&&(!this.preparatomtaleavsnitt.isEmpty()))?this.getPreparatomtaleavsnitt():null);
            strategy.appendField(locator, this, "preparatomtaleavsnitt", buffer, thePreparatomtaleavsnitt);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Legemiddelpakning)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Legemiddelpakning that = ((Legemiddelpakning) object);
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            String lhsVarenr;
            lhsVarenr = this.getVarenr();
            String rhsVarenr;
            rhsVarenr = that.getVarenr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "varenr", lhsVarenr), LocatorUtils.property(thatLocator, "varenr", rhsVarenr), lhsVarenr, rhsVarenr)) {
                return false;
            }
        }
        {
            List<String> lhsEan;
            lhsEan = (((this.ean!= null)&&(!this.ean.isEmpty()))?this.getEan():null);
            List<String> rhsEan;
            rhsEan = (((that.ean!= null)&&(!that.ean.isEmpty()))?that.getEan():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ean", lhsEan), LocatorUtils.property(thatLocator, "ean", rhsEan), lhsEan, rhsEan)) {
                return false;
            }
        }
        {
            Boolean lhsIkkeKonservering;
            lhsIkkeKonservering = this.getIkkeKonservering();
            Boolean rhsIkkeKonservering;
            rhsIkkeKonservering = that.getIkkeKonservering();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ikkeKonservering", lhsIkkeKonservering), LocatorUtils.property(thatLocator, "ikkeKonservering", rhsIkkeKonservering), lhsIkkeKonservering, rhsIkkeKonservering)) {
                return false;
            }
        }
        {
            CS lhsOppbevaring;
            lhsOppbevaring = this.getOppbevaring();
            CS rhsOppbevaring;
            rhsOppbevaring = that.getOppbevaring();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oppbevaring", lhsOppbevaring), LocatorUtils.property(thatLocator, "oppbevaring", rhsOppbevaring), lhsOppbevaring, rhsOppbevaring)) {
                return false;
            }
        }
        {
            List<Pakningsinfo> lhsPakningsinfo;
            lhsPakningsinfo = (((this.pakningsinfo!= null)&&(!this.pakningsinfo.isEmpty()))?this.getPakningsinfo():null);
            List<Pakningsinfo> rhsPakningsinfo;
            rhsPakningsinfo = (((that.pakningsinfo!= null)&&(!that.pakningsinfo.isEmpty()))?that.getPakningsinfo():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pakningsinfo", lhsPakningsinfo), LocatorUtils.property(thatLocator, "pakningsinfo", rhsPakningsinfo), lhsPakningsinfo, rhsPakningsinfo)) {
                return false;
            }
        }
        {
            List<PakningsinfoResept> lhsPakningsinfoResept;
            lhsPakningsinfoResept = (((this.pakningsinfoResept!= null)&&(!this.pakningsinfoResept.isEmpty()))?this.getPakningsinfoResept():null);
            List<PakningsinfoResept> rhsPakningsinfoResept;
            rhsPakningsinfoResept = (((that.pakningsinfoResept!= null)&&(!that.pakningsinfoResept.isEmpty()))?that.getPakningsinfoResept():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pakningsinfoResept", lhsPakningsinfoResept), LocatorUtils.property(thatLocator, "pakningsinfoResept", rhsPakningsinfoResept), lhsPakningsinfoResept, rhsPakningsinfoResept)) {
                return false;
            }
        }
        {
            List<PrisVare> lhsPrisVare;
            lhsPrisVare = (((this.prisVare!= null)&&(!this.prisVare.isEmpty()))?this.getPrisVare():null);
            List<PrisVare> rhsPrisVare;
            rhsPrisVare = (((that.prisVare!= null)&&(!that.prisVare.isEmpty()))?that.getPrisVare():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "prisVare", lhsPrisVare), LocatorUtils.property(thatLocator, "prisVare", rhsPrisVare), lhsPrisVare, rhsPrisVare)) {
                return false;
            }
        }
        {
            Markedsforingsinfo lhsMarkedsforingsinfo;
            lhsMarkedsforingsinfo = this.getMarkedsforingsinfo();
            Markedsforingsinfo rhsMarkedsforingsinfo;
            rhsMarkedsforingsinfo = that.getMarkedsforingsinfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "markedsforingsinfo", lhsMarkedsforingsinfo), LocatorUtils.property(thatLocator, "markedsforingsinfo", rhsMarkedsforingsinfo), lhsMarkedsforingsinfo, rhsMarkedsforingsinfo)) {
                return false;
            }
        }
        {
            List<Preparatomtaleavsnitt> lhsPreparatomtaleavsnitt;
            lhsPreparatomtaleavsnitt = (((this.preparatomtaleavsnitt!= null)&&(!this.preparatomtaleavsnitt.isEmpty()))?this.getPreparatomtaleavsnitt():null);
            List<Preparatomtaleavsnitt> rhsPreparatomtaleavsnitt;
            rhsPreparatomtaleavsnitt = (((that.preparatomtaleavsnitt!= null)&&(!that.preparatomtaleavsnitt.isEmpty()))?that.getPreparatomtaleavsnitt():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "preparatomtaleavsnitt", lhsPreparatomtaleavsnitt), LocatorUtils.property(thatLocator, "preparatomtaleavsnitt", rhsPreparatomtaleavsnitt), lhsPreparatomtaleavsnitt, rhsPreparatomtaleavsnitt)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            String theVarenr;
            theVarenr = this.getVarenr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "varenr", theVarenr), currentHashCode, theVarenr);
        }
        {
            List<String> theEan;
            theEan = (((this.ean!= null)&&(!this.ean.isEmpty()))?this.getEan():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ean", theEan), currentHashCode, theEan);
        }
        {
            Boolean theIkkeKonservering;
            theIkkeKonservering = this.getIkkeKonservering();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ikkeKonservering", theIkkeKonservering), currentHashCode, theIkkeKonservering);
        }
        {
            CS theOppbevaring;
            theOppbevaring = this.getOppbevaring();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oppbevaring", theOppbevaring), currentHashCode, theOppbevaring);
        }
        {
            List<Pakningsinfo> thePakningsinfo;
            thePakningsinfo = (((this.pakningsinfo!= null)&&(!this.pakningsinfo.isEmpty()))?this.getPakningsinfo():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pakningsinfo", thePakningsinfo), currentHashCode, thePakningsinfo);
        }
        {
            List<PakningsinfoResept> thePakningsinfoResept;
            thePakningsinfoResept = (((this.pakningsinfoResept!= null)&&(!this.pakningsinfoResept.isEmpty()))?this.getPakningsinfoResept():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pakningsinfoResept", thePakningsinfoResept), currentHashCode, thePakningsinfoResept);
        }
        {
            List<PrisVare> thePrisVare;
            thePrisVare = (((this.prisVare!= null)&&(!this.prisVare.isEmpty()))?this.getPrisVare():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prisVare", thePrisVare), currentHashCode, thePrisVare);
        }
        {
            Markedsforingsinfo theMarkedsforingsinfo;
            theMarkedsforingsinfo = this.getMarkedsforingsinfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "markedsforingsinfo", theMarkedsforingsinfo), currentHashCode, theMarkedsforingsinfo);
        }
        {
            List<Preparatomtaleavsnitt> thePreparatomtaleavsnitt;
            thePreparatomtaleavsnitt = (((this.preparatomtaleavsnitt!= null)&&(!this.preparatomtaleavsnitt.isEmpty()))?this.getPreparatomtaleavsnitt():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "preparatomtaleavsnitt", thePreparatomtaleavsnitt), currentHashCode, thePreparatomtaleavsnitt);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
