//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Styrke" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Form" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Stoff" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "styrke",
    "form",
    "stoff"
})
@XmlRootElement(name = "StyrkeFormStoff")
public class StyrkeFormStoff
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Styrke")
    protected String styrke;
    @XmlElement(name = "Form")
    protected String form;
    @XmlElement(name = "Stoff")
    protected List<String> stoff;

    /**
     * Gets the value of the styrke property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStyrke() {
        return styrke;
    }

    /**
     * Sets the value of the styrke property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStyrke(String value) {
        this.styrke = value;
    }

    /**
     * Gets the value of the form property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getForm() {
        return form;
    }

    /**
     * Sets the value of the form property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setForm(String value) {
        this.form = value;
    }

    /**
     * Gets the value of the stoff property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the stoff property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStoff().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getStoff() {
        if (stoff == null) {
            stoff = new ArrayList<String>();
        }
        return this.stoff;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theStyrke;
            theStyrke = this.getStyrke();
            strategy.appendField(locator, this, "styrke", buffer, theStyrke);
        }
        {
            String theForm;
            theForm = this.getForm();
            strategy.appendField(locator, this, "form", buffer, theForm);
        }
        {
            List<String> theStoff;
            theStoff = (((this.stoff!= null)&&(!this.stoff.isEmpty()))?this.getStoff():null);
            strategy.appendField(locator, this, "stoff", buffer, theStoff);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof StyrkeFormStoff)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final StyrkeFormStoff that = ((StyrkeFormStoff) object);
        {
            String lhsStyrke;
            lhsStyrke = this.getStyrke();
            String rhsStyrke;
            rhsStyrke = that.getStyrke();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "styrke", lhsStyrke), LocatorUtils.property(thatLocator, "styrke", rhsStyrke), lhsStyrke, rhsStyrke)) {
                return false;
            }
        }
        {
            String lhsForm;
            lhsForm = this.getForm();
            String rhsForm;
            rhsForm = that.getForm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "form", lhsForm), LocatorUtils.property(thatLocator, "form", rhsForm), lhsForm, rhsForm)) {
                return false;
            }
        }
        {
            List<String> lhsStoff;
            lhsStoff = (((this.stoff!= null)&&(!this.stoff.isEmpty()))?this.getStoff():null);
            List<String> rhsStoff;
            rhsStoff = (((that.stoff!= null)&&(!that.stoff.isEmpty()))?that.getStoff():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stoff", lhsStoff), LocatorUtils.property(thatLocator, "stoff", rhsStoff), lhsStoff, rhsStoff)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theStyrke;
            theStyrke = this.getStyrke();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "styrke", theStyrke), currentHashCode, theStyrke);
        }
        {
            String theForm;
            theForm = this.getForm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "form", theForm), currentHashCode, theForm);
        }
        {
            List<String> theStoff;
            theStoff = (((this.stoff!= null)&&(!this.stoff.isEmpty()))?this.getStoff():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stoff", theStoff), currentHashCode, theStoff);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
