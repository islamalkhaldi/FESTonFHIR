//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.19 at 09:29:28 PM CEST 
//


package no.uia.ehealth.workflow;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Type" type="{http://www.kith.no/xmlstds}CV"/&gt;
 *         &lt;element name="Overskrift" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="Varseltekst" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="Visningsregel" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded"/&gt;
 *         &lt;element name="KodetInfo" type="{http://www.kith.no/xmlstds}CV" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="FraDato" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2014-12-01}Lenke" minOccurs="0"/&gt;
 *         &lt;element name="Referanseelement" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="Klasse" type="{http://www.kith.no/xmlstds}CS"/&gt;
 *                   &lt;element name="RefElement" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded"/&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "type",
    "overskrift",
    "varseltekst",
    "visningsregel",
    "kodetInfo",
    "fraDato",
    "lenke",
    "referanseelement"
})
@XmlRootElement(name = "VarselSlv", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
public class VarselSlv
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Type", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected CV type;
    @XmlElement(name = "Overskrift", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected String overskrift;
    @XmlElement(name = "Varseltekst", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected String varseltekst;
    @XmlElement(name = "Visningsregel", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    protected List<CV> visningsregel;
    @XmlElement(name = "KodetInfo", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected List<CV> kodetInfo;
    @XmlElement(name = "FraDato", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar fraDato;
    @XmlElement(name = "Lenke")
    protected Lenke lenke;
    @XmlElement(name = "Referanseelement", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01")
    protected List<VarselSlv.Referanseelement> referanseelement;

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link CV }
     *     
     */
    public CV getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link CV }
     *     
     */
    public void setType(CV value) {
        this.type = value;
    }

    /**
     * Gets the value of the overskrift property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOverskrift() {
        return overskrift;
    }

    /**
     * Sets the value of the overskrift property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOverskrift(String value) {
        this.overskrift = value;
    }

    /**
     * Gets the value of the varseltekst property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVarseltekst() {
        return varseltekst;
    }

    /**
     * Sets the value of the varseltekst property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVarseltekst(String value) {
        this.varseltekst = value;
    }

    /**
     * Gets the value of the visningsregel property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the visningsregel property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVisningsregel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getVisningsregel() {
        if (visningsregel == null) {
            visningsregel = new ArrayList<CV>();
        }
        return this.visningsregel;
    }

    /**
     * Gets the value of the kodetInfo property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the kodetInfo property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getKodetInfo().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CV }
     * 
     * 
     */
    public List<CV> getKodetInfo() {
        if (kodetInfo == null) {
            kodetInfo = new ArrayList<CV>();
        }
        return this.kodetInfo;
    }

    /**
     * Gets the value of the fraDato property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getFraDato() {
        return fraDato;
    }

    /**
     * Sets the value of the fraDato property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setFraDato(XMLGregorianCalendar value) {
        this.fraDato = value;
    }

    /**
     * Gets the value of the lenke property.
     * 
     * @return
     *     possible object is
     *     {@link Lenke }
     *     
     */
    public Lenke getLenke() {
        return lenke;
    }

    /**
     * Sets the value of the lenke property.
     * 
     * @param value
     *     allowed object is
     *     {@link Lenke }
     *     
     */
    public void setLenke(Lenke value) {
        this.lenke = value;
    }

    /**
     * Gets the value of the referanseelement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the referanseelement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReferanseelement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VarselSlv.Referanseelement }
     * 
     * 
     */
    public List<VarselSlv.Referanseelement> getReferanseelement() {
        if (referanseelement == null) {
            referanseelement = new ArrayList<VarselSlv.Referanseelement>();
        }
        return this.referanseelement;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            CV theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            String theOverskrift;
            theOverskrift = this.getOverskrift();
            strategy.appendField(locator, this, "overskrift", buffer, theOverskrift);
        }
        {
            String theVarseltekst;
            theVarseltekst = this.getVarseltekst();
            strategy.appendField(locator, this, "varseltekst", buffer, theVarseltekst);
        }
        {
            List<CV> theVisningsregel;
            theVisningsregel = (((this.visningsregel!= null)&&(!this.visningsregel.isEmpty()))?this.getVisningsregel():null);
            strategy.appendField(locator, this, "visningsregel", buffer, theVisningsregel);
        }
        {
            List<CV> theKodetInfo;
            theKodetInfo = (((this.kodetInfo!= null)&&(!this.kodetInfo.isEmpty()))?this.getKodetInfo():null);
            strategy.appendField(locator, this, "kodetInfo", buffer, theKodetInfo);
        }
        {
            XMLGregorianCalendar theFraDato;
            theFraDato = this.getFraDato();
            strategy.appendField(locator, this, "fraDato", buffer, theFraDato);
        }
        {
            Lenke theLenke;
            theLenke = this.getLenke();
            strategy.appendField(locator, this, "lenke", buffer, theLenke);
        }
        {
            List<VarselSlv.Referanseelement> theReferanseelement;
            theReferanseelement = (((this.referanseelement!= null)&&(!this.referanseelement.isEmpty()))?this.getReferanseelement():null);
            strategy.appendField(locator, this, "referanseelement", buffer, theReferanseelement);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof VarselSlv)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final VarselSlv that = ((VarselSlv) object);
        {
            CV lhsType;
            lhsType = this.getType();
            CV rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            String lhsOverskrift;
            lhsOverskrift = this.getOverskrift();
            String rhsOverskrift;
            rhsOverskrift = that.getOverskrift();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "overskrift", lhsOverskrift), LocatorUtils.property(thatLocator, "overskrift", rhsOverskrift), lhsOverskrift, rhsOverskrift)) {
                return false;
            }
        }
        {
            String lhsVarseltekst;
            lhsVarseltekst = this.getVarseltekst();
            String rhsVarseltekst;
            rhsVarseltekst = that.getVarseltekst();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "varseltekst", lhsVarseltekst), LocatorUtils.property(thatLocator, "varseltekst", rhsVarseltekst), lhsVarseltekst, rhsVarseltekst)) {
                return false;
            }
        }
        {
            List<CV> lhsVisningsregel;
            lhsVisningsregel = (((this.visningsregel!= null)&&(!this.visningsregel.isEmpty()))?this.getVisningsregel():null);
            List<CV> rhsVisningsregel;
            rhsVisningsregel = (((that.visningsregel!= null)&&(!that.visningsregel.isEmpty()))?that.getVisningsregel():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "visningsregel", lhsVisningsregel), LocatorUtils.property(thatLocator, "visningsregel", rhsVisningsregel), lhsVisningsregel, rhsVisningsregel)) {
                return false;
            }
        }
        {
            List<CV> lhsKodetInfo;
            lhsKodetInfo = (((this.kodetInfo!= null)&&(!this.kodetInfo.isEmpty()))?this.getKodetInfo():null);
            List<CV> rhsKodetInfo;
            rhsKodetInfo = (((that.kodetInfo!= null)&&(!that.kodetInfo.isEmpty()))?that.getKodetInfo():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "kodetInfo", lhsKodetInfo), LocatorUtils.property(thatLocator, "kodetInfo", rhsKodetInfo), lhsKodetInfo, rhsKodetInfo)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsFraDato;
            lhsFraDato = this.getFraDato();
            XMLGregorianCalendar rhsFraDato;
            rhsFraDato = that.getFraDato();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fraDato", lhsFraDato), LocatorUtils.property(thatLocator, "fraDato", rhsFraDato), lhsFraDato, rhsFraDato)) {
                return false;
            }
        }
        {
            Lenke lhsLenke;
            lhsLenke = this.getLenke();
            Lenke rhsLenke;
            rhsLenke = that.getLenke();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lenke", lhsLenke), LocatorUtils.property(thatLocator, "lenke", rhsLenke), lhsLenke, rhsLenke)) {
                return false;
            }
        }
        {
            List<VarselSlv.Referanseelement> lhsReferanseelement;
            lhsReferanseelement = (((this.referanseelement!= null)&&(!this.referanseelement.isEmpty()))?this.getReferanseelement():null);
            List<VarselSlv.Referanseelement> rhsReferanseelement;
            rhsReferanseelement = (((that.referanseelement!= null)&&(!that.referanseelement.isEmpty()))?that.getReferanseelement():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referanseelement", lhsReferanseelement), LocatorUtils.property(thatLocator, "referanseelement", rhsReferanseelement), lhsReferanseelement, rhsReferanseelement)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            CV theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            String theOverskrift;
            theOverskrift = this.getOverskrift();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "overskrift", theOverskrift), currentHashCode, theOverskrift);
        }
        {
            String theVarseltekst;
            theVarseltekst = this.getVarseltekst();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "varseltekst", theVarseltekst), currentHashCode, theVarseltekst);
        }
        {
            List<CV> theVisningsregel;
            theVisningsregel = (((this.visningsregel!= null)&&(!this.visningsregel.isEmpty()))?this.getVisningsregel():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "visningsregel", theVisningsregel), currentHashCode, theVisningsregel);
        }
        {
            List<CV> theKodetInfo;
            theKodetInfo = (((this.kodetInfo!= null)&&(!this.kodetInfo.isEmpty()))?this.getKodetInfo():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "kodetInfo", theKodetInfo), currentHashCode, theKodetInfo);
        }
        {
            XMLGregorianCalendar theFraDato;
            theFraDato = this.getFraDato();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fraDato", theFraDato), currentHashCode, theFraDato);
        }
        {
            Lenke theLenke;
            theLenke = this.getLenke();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lenke", theLenke), currentHashCode, theLenke);
        }
        {
            List<VarselSlv.Referanseelement> theReferanseelement;
            theReferanseelement = (((this.referanseelement!= null)&&(!this.referanseelement.isEmpty()))?this.getReferanseelement():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referanseelement", theReferanseelement), currentHashCode, theReferanseelement);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="Klasse" type="{http://www.kith.no/xmlstds}CS"/&gt;
     *         &lt;element name="RefElement" type="{http://www.w3.org/2001/XMLSchema}IDREF" maxOccurs="unbounded"/&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "klasse",
        "refElement"
    })
    public static class Referanseelement
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "Klasse", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", required = true)
        protected CS klasse;
        @XmlElementRef(name = "RefElement", namespace = "http://www.kith.no/xmlstds/eresept/m30/2014-12-01", type = JAXBElement.class)
        protected List<JAXBElement<Object>> refElement;

        /**
         * Gets the value of the klasse property.
         * 
         * @return
         *     possible object is
         *     {@link CS }
         *     
         */
        public CS getKlasse() {
            return klasse;
        }

        /**
         * Sets the value of the klasse property.
         * 
         * @param value
         *     allowed object is
         *     {@link CS }
         *     
         */
        public void setKlasse(CS value) {
            this.klasse = value;
        }

        /**
         * Gets the value of the refElement property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the refElement property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getRefElement().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link JAXBElement }{@code <}{@link Object }{@code >}
         * 
         * 
         */
        public List<JAXBElement<Object>> getRefElement() {
            if (refElement == null) {
                refElement = new ArrayList<JAXBElement<Object>>();
            }
            return this.refElement;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                CS theKlasse;
                theKlasse = this.getKlasse();
                strategy.appendField(locator, this, "klasse", buffer, theKlasse);
            }
            {
                List<JAXBElement<Object>> theRefElement;
                theRefElement = (((this.refElement!= null)&&(!this.refElement.isEmpty()))?this.getRefElement():null);
                strategy.appendField(locator, this, "refElement", buffer, theRefElement);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VarselSlv.Referanseelement)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final VarselSlv.Referanseelement that = ((VarselSlv.Referanseelement) object);
            {
                CS lhsKlasse;
                lhsKlasse = this.getKlasse();
                CS rhsKlasse;
                rhsKlasse = that.getKlasse();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "klasse", lhsKlasse), LocatorUtils.property(thatLocator, "klasse", rhsKlasse), lhsKlasse, rhsKlasse)) {
                    return false;
                }
            }
            {
                List<JAXBElement<Object>> lhsRefElement;
                lhsRefElement = (((this.refElement!= null)&&(!this.refElement.isEmpty()))?this.getRefElement():null);
                List<JAXBElement<Object>> rhsRefElement;
                rhsRefElement = (((that.refElement!= null)&&(!that.refElement.isEmpty()))?that.getRefElement():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "refElement", lhsRefElement), LocatorUtils.property(thatLocator, "refElement", rhsRefElement), lhsRefElement, rhsRefElement)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                CS theKlasse;
                theKlasse = this.getKlasse();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "klasse", theKlasse), currentHashCode, theKlasse);
            }
            {
                List<JAXBElement<Object>> theRefElement;
                theRefElement = (((this.refElement!= null)&&(!this.refElement.isEmpty()))?this.getRefElement():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refElement", theRefElement), currentHashCode, theRefElement);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
